{
  "contractName": "ContestTeamMock",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AttendeeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "membersCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "memberPrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeSplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAttendee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveMembers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveMembersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAttendee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceAttendee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "splitPrize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReservedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AttendeeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"membersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"memberPrize\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAttendee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveMembersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAttendee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAttendee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_unpause()\":{\"details\":\"Internal implementation that lifts the paused state.\"},\"balanceOf()\":{\"returns\":{\"_0\":\"The balance of a team member\"}},\"getActiveMembers()\":{\"returns\":{\"_0\":\"An array of addresses representing the accounts of active members\"}},\"getActiveMembersCount()\":{\"returns\":{\"_0\":\"{uint256} Count of active members\"}},\"isPaused()\":{\"returns\":{\"_0\":\"{true} if the contract is paused; otherwise, {false}.\"}},\"pause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"splitPrize()\":{\"details\":\"Implements the \\\"withdraw pattern\\\" by allocating balances to team  members, so they can request a withdraw once the split is done.\"},\"unpause()\":{\"details\":\"Implements the onlyAttendee modifier for access control.\"},\"withdraw(uint256)\":{\"details\":\"Implements the \\\"withdraw pattern\\\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. \"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256,uint256)\":{\"notice\":\"Event emitted when the contract receives a deposit.\"},\"PrizeSplit(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"emitted when the contract's balance (prize) is split between active members.\"},\"Withdraw(address,uint256,uint256)\":{\"notice\":\"emitted when a member withdraws from the contract.\"}},\"kind\":\"user\",\"methods\":{\"balanceOf()\":{\"notice\":\"Get the balance of a team member\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getActiveMembers()\":{\"notice\":\"Gets the active members in the team.\"},\"getActiveMembersCount()\":{\"notice\":\"Gets the number of active team members.\"},\"isPaused()\":{\"notice\":\"Returns if the contract is paused or not.\"},\"pause()\":{\"notice\":\"Trigger the paused state.\"},\"splitPrize()\":{\"notice\":\"Splits the available's contract balance between active team members.\"},\"unpause()\":{\"notice\":\"Lifts the paused state.\"},\"withdraw(uint256)\":{\"notice\":\"Allows a team member to withdraw its funds from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol\":\"ContestTeamMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeam.sol\":{\"keccak256\":\"0xd1b449fc904fa0f595711cba0a16746a6c4932fce51d51df0c0409bef110a599\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a203265f84124273591308298b9e5c097ba3116d8e3755accd4fbf50d50a1b78\",\"dweb:/ipfs/QmWax7vpTquEcTzfGAorKH8gs2wWPHdpHMe6PdDMKWTLN4\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xe658c5869875103432729fd020763ede0557d94848fe421aa140050cfad0215c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9f8cc47d690ed64cf8780b26b9d25cd945004831b1ade3be565e47b61d070bee\",\"dweb:/ipfs/QmZACTXi1S92e1tF8tXWi5oWKfptjwMTfDyRcJXDPRLUcZ\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol\":{\"keccak256\":\"0x8f4334131000560303040241d436e60634dda2b446dbb307ea0bb3decb585817\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1b002c96cd44ad5b1a0cf534bc74a86c78570e62b46f1179ec5cde1d9b0f975c\",\"dweb:/ipfs/QmNUnyeHt1SNsii7HeKxfxrQMLz4qZs9KE3JZDxYNnELzJ\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/IPayable.sol\":{\"keccak256\":\"0xda284e0ea3af452620000a3133e06e8bb2967c77bbea1555dbc1610eda3032b4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9594b85a4979a5acb339af4f9108435c70c7e45f45a1845ccb6ad3e1d96ef9ae\",\"dweb:/ipfs/QmetoPvij8DkdBhsXZhn9PPVXqhous5kergnVfX637YzkZ\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/Payable.sol\":{\"keccak256\":\"0xda9c92360a895c084591af056cd6d6c1b5892a8adc04d07c35561b508787293d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://17ec30af1c9853d300761b4a7742d2e695fcc8ad6712d39cfed9270cbdf901e4\",\"dweb:/ipfs/QmUHTVC4kSmR37aBgAkPsU6dMX39mEwHmDZtArqPEokBnk\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/AttendeeRole.sol\":{\"keccak256\":\"0xa51bbee9262940c417d864967fc5b3c9e90fdb20848ec3afc04c30e1d2bf3e6c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://926e4555fa2fcf567df76509680bdf5600edc33335f263f11c46a297951d67dc\",\"dweb:/ipfs/QmPkhvmATnQ9KkiGxdohwdWET3RZVfvhDQek3M9ZzZxGtU\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/Roles.sol\":{\"keccak256\":\"0xa2b42f0e55cbc7aa021e27a6d433231aef7afa7bcb67ad2b591122d4cffa2b10\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://251d332eafdcc13078f201e14296a0280e29cce88040905d786d4571bba84eea\",\"dweb:/ipfs/QmWYu8To6JMBy46CgXVv9o7biZbsARWh4H5h2zpcjGW6qG\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5033808062000067576040805162461bcd60e51b815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b620000728162000084565b50506001805460ff191690556200030d565b60015460ff1615620000d2576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b620000e8816200016c60201b62000a7b1760201c565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460209081526040909120805460ff19168317905560035462000166929091620001be811b62000abd17901c565b60035550565b620001878160006200022060201b62000b1e1790919060201c565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b60008282018381101562000219576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6200022c8282620002a4565b156200027f576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002ed5760405162461bcd60e51b8152600401808060200182810382526022815260200180620015336022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b611216806200031d6000396000f3fe6080604052600436106100f35760003560e01c8063809dab6a1161008a578063d0e30db011610059578063d0e30db0146102bd578063d9a15549146102c5578063fb1da543146102da578063fc8234cb146102ef576100f3565b8063809dab6a146102695780638456cb591461027e5780638f7c851914610293578063b187bd26146102a8576100f3565b80633f4ba83a116100c65780633f4ba83a146101935780634876aebc146101a85780636cad25901461020d578063722713f714610254576100f3565b806307057382146100f8578063102462541461010f57806312065fe0146101425780632e1a7d4d14610169575b600080fd5b34801561010457600080fd5b5061010d610304565b005b34801561011b57600080fd5b5061010d6004803603602081101561013257600080fd5b50356001600160a01b03166105f5565b34801561014e57600080fd5b50610157610645565b60408051918252519081900360200190f35b34801561017557600080fd5b5061010d6004803603602081101561018c57600080fd5b5035610649565b34801561019f57600080fd5b5061010d61074a565b3480156101b457600080fd5b506101bd610798565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101f95781810151838201526020016101e1565b505050509050019250505060405180910390f35b34801561021957600080fd5b506102406004803603602081101561023057600080fd5b50356001600160a01b0316610882565b604080519115158252519081900360200190f35b34801561026057600080fd5b50610157610894565b34801561027557600080fd5b506101576108ee565b34801561028a57600080fd5b5061010d61090a565b34801561029f57600080fd5b50610157610956565b3480156102b457600080fd5b5061024061095c565b61010d610965565b3480156102d157600080fd5b506101576109dd565b3480156102e657600080fd5b5061010d6109e3565b3480156102fb57600080fd5b5061010d6109ec565b61030d33610882565b6103485760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b60015460ff1615610395576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b60006103ac60065447610b9f90919063ffffffff16565b905060008111610403576040805162461bcd60e51b815260206004820152601b60248201527f436f6e74657374616e745465616d2062616c616e636520697320300000000000604482015290519081900360640190fd5b600061041a60035483610be190919063ffffffff16565b905060008111610465576040805162461bcd60e51b815260206004820152601160248201527004d656d626572207072697a65206973203607c1b604482015290519081900360640190fd5b600061047382600354610c23565b90506000805b6002548110156105195760006002828154811061049257fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff16151560011415610510576001600160a01b0381166000908152600560205260409020546104ea9086610abd565b6001600160a01b03821660009081526005602052604090205561050d8386610abd565b92505b50600101610479565b506006546105279085610abd565b6006558082146105685760405162461bcd60e51b81526004018080602001828103825260248152602001806110d76024913960400191505060405180910390fd5b60065447146105a85760405162461bcd60e51b815260040180806020018281038252602a8152602001806110fb602a913960400191505060405180910390fd5b60035460408051868152602081019290925281810185905251429133917f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d9181900360600190a350505050565b6105fe33610882565b6106395760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b61064281610c7c565b50565b4790565b336000908152600560205260409020548111156106a2576040805162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b604482015290519081900360640190fd5b336000908152600560205260409020546106bc8183610b9f565b3360009081526005602052604090208190556006549091506106de9083610b9f565b600655604051339083156108fc029084906000818181858888f1935050505015801561070e573d6000803e3d6000fd5b50604080518381529051429133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050565b61075333610882565b61078e5760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b610796610d46565b565b60025460035460609110156107ac57600080fd5b600060035467ffffffffffffffff811180156107c757600080fd5b506040519080825280602002602001820160405280156107f1578160200160208202803683370190505b50905060005b60025481101561087c5760006002828154811061081057fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff16151560011415610873578083838151811061085257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016107f7565b50905090565b600061088e8183610d4e565b92915050565b600061089f33610882565b6108da5760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b503360009081526005602052604090205490565b600061090560065447610b9f90919063ffffffff16565b905090565b61091333610882565b61094e5760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b610796610db5565b60035490565b60015460ff1690565b600034116109a45760405162461bcd60e51b81526004018080602001828103825260218152602001806110b66021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60065490565b61079633610dbd565b60015460ff16610a3c576040805162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc81b9bdd081c185d5cd95960521b604482015290519081900360640190fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b610a86600082610b1e565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b600082820183811015610b17576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610b288282610d4e565b15610b7a576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000610b1783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e82565b6000610b1783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610f19565b600082610c325750600061088e565b82820282848281610c3f57fe5b0414610b175760405162461bcd60e51b81526004018080602001828103825260218152602001806111466021913960400191505060405180910390fd5b60015460ff1615610cc9576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b610cd281610a7b565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460205260409020805460ff191682179055600354610d4091610abd565b60035550565b6107966109ec565b60006001600160a01b038216610d955760405162461bcd60e51b81526004018080602001828103825260228152602001806111676022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610796610f7e565b60015460ff1615610e0a576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b600160035411610e4b5760405162461bcd60e51b81526004018080602001828103825260278152602001806111ba6027913960400191505060405180910390fd5b610e548161100c565b6001600160a01b0381166000908152600460205260409020805460ff19169055600354610d40906001610b9f565b60008184841115610f115760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed6578181015183820152602001610ebe565b50505050905090810190601f168015610f035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610f685760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610ed6578181015183820152602001610ebe565b506000838581610f7457fe5b0495945050505050565b60015460ff1615610fcb576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b61101760008261104e565b6040516001600160a01b038216907fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e090600090a250565b6110588282610d4e565b6110935760405162461bcd60e51b81526004018080602001828103825260218152602001806111256021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a2646970667358221220086b67729f96d4ec0b786aaa9d8dbf6e81127fc9162292cc6780fb4f3c2248cb64736f6c63430007060033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063809dab6a1161008a578063d0e30db011610059578063d0e30db0146102bd578063d9a15549146102c5578063fb1da543146102da578063fc8234cb146102ef576100f3565b8063809dab6a146102695780638456cb591461027e5780638f7c851914610293578063b187bd26146102a8576100f3565b80633f4ba83a116100c65780633f4ba83a146101935780634876aebc146101a85780636cad25901461020d578063722713f714610254576100f3565b806307057382146100f8578063102462541461010f57806312065fe0146101425780632e1a7d4d14610169575b600080fd5b34801561010457600080fd5b5061010d610304565b005b34801561011b57600080fd5b5061010d6004803603602081101561013257600080fd5b50356001600160a01b03166105f5565b34801561014e57600080fd5b50610157610645565b60408051918252519081900360200190f35b34801561017557600080fd5b5061010d6004803603602081101561018c57600080fd5b5035610649565b34801561019f57600080fd5b5061010d61074a565b3480156101b457600080fd5b506101bd610798565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101f95781810151838201526020016101e1565b505050509050019250505060405180910390f35b34801561021957600080fd5b506102406004803603602081101561023057600080fd5b50356001600160a01b0316610882565b604080519115158252519081900360200190f35b34801561026057600080fd5b50610157610894565b34801561027557600080fd5b506101576108ee565b34801561028a57600080fd5b5061010d61090a565b34801561029f57600080fd5b50610157610956565b3480156102b457600080fd5b5061024061095c565b61010d610965565b3480156102d157600080fd5b506101576109dd565b3480156102e657600080fd5b5061010d6109e3565b3480156102fb57600080fd5b5061010d6109ec565b61030d33610882565b6103485760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b60015460ff1615610395576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b60006103ac60065447610b9f90919063ffffffff16565b905060008111610403576040805162461bcd60e51b815260206004820152601b60248201527f436f6e74657374616e745465616d2062616c616e636520697320300000000000604482015290519081900360640190fd5b600061041a60035483610be190919063ffffffff16565b905060008111610465576040805162461bcd60e51b815260206004820152601160248201527004d656d626572207072697a65206973203607c1b604482015290519081900360640190fd5b600061047382600354610c23565b90506000805b6002548110156105195760006002828154811061049257fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff16151560011415610510576001600160a01b0381166000908152600560205260409020546104ea9086610abd565b6001600160a01b03821660009081526005602052604090205561050d8386610abd565b92505b50600101610479565b506006546105279085610abd565b6006558082146105685760405162461bcd60e51b81526004018080602001828103825260248152602001806110d76024913960400191505060405180910390fd5b60065447146105a85760405162461bcd60e51b815260040180806020018281038252602a8152602001806110fb602a913960400191505060405180910390fd5b60035460408051868152602081019290925281810185905251429133917f347ce84d9ed7334a67bdbc36e6519fbbc870a22468c5fa79fcbb5d68f5bc220d9181900360600190a350505050565b6105fe33610882565b6106395760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b61064281610c7c565b50565b4790565b336000908152600560205260409020548111156106a2576040805162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b604482015290519081900360640190fd5b336000908152600560205260409020546106bc8183610b9f565b3360009081526005602052604090208190556006549091506106de9083610b9f565b600655604051339083156108fc029084906000818181858888f1935050505015801561070e573d6000803e3d6000fd5b50604080518381529051429133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050565b61075333610882565b61078e5760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b610796610d46565b565b60025460035460609110156107ac57600080fd5b600060035467ffffffffffffffff811180156107c757600080fd5b506040519080825280602002602001820160405280156107f1578160200160208202803683370190505b50905060005b60025481101561087c5760006002828154811061081057fe5b60009182526020808320909101546001600160a01b0316808352600490915260409091205490915060ff16151560011415610873578083838151811061085257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016107f7565b50905090565b600061088e8183610d4e565b92915050565b600061089f33610882565b6108da5760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b503360009081526005602052604090205490565b600061090560065447610b9f90919063ffffffff16565b905090565b61091333610882565b61094e5760405162461bcd60e51b81526004018080602001828103825260318152602001806111896031913960400191505060405180910390fd5b610796610db5565b60035490565b60015460ff1690565b600034116109a45760405162461bcd60e51b81526004018080602001828103825260218152602001806110b66021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60065490565b61079633610dbd565b60015460ff16610a3c576040805162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd081a5cc81b9bdd081c185d5cd95960521b604482015290519081900360640190fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b610a86600082610b1e565b6040516001600160a01b038216907ff965229cbef17c17a2ced10d89ec5f669942d8dd77bd8a5debcaed392434504e90600090a250565b600082820183811015610b17576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610b288282610d4e565b15610b7a576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000610b1783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e82565b6000610b1783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610f19565b600082610c325750600061088e565b82820282848281610c3f57fe5b0414610b175760405162461bcd60e51b81526004018080602001828103825260218152602001806111466021913960400191505060405180910390fd5b60015460ff1615610cc9576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b610cd281610a7b565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384169081179091556000908152600460205260409020805460ff191682179055600354610d4091610abd565b60035550565b6107966109ec565b60006001600160a01b038216610d955760405162461bcd60e51b81526004018080602001828103825260228152602001806111676022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610796610f7e565b60015460ff1615610e0a576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b600160035411610e4b5760405162461bcd60e51b81526004018080602001828103825260278152602001806111ba6027913960400191505060405180910390fd5b610e548161100c565b6001600160a01b0381166000908152600460205260409020805460ff19169055600354610d40906001610b9f565b60008184841115610f115760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed6578181015183820152602001610ebe565b50505050905090810190601f168015610f035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610f685760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610ed6578181015183820152602001610ebe565b506000838581610f7457fe5b0495945050505050565b60015460ff1615610fcb576040805162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604482015290519081900360640190fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b61101760008261104e565b6040516001600160a01b038216907fac9358f7f807517a7bfea84ce37617a495e55d78f95d2efadcdfbf94817220e090600090a250565b6110588282610d4e565b6110935760405162461bcd60e51b81526004018080602001828103825260218152602001806111256021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe6d73672e76616c7565206d757374206265206772656174686572207468616e2030496e76616c69642073706c6974206265747765656e20616374697665206d656d6265727352657365727665642062616c616e63656420776173206e6f7420757064617465642070726f7065726c79526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373417474656e646565526f6c653a2063616c6c657220646f6573206e6f74206861766520417474656e64656520526f6c652e43616e6e6f742072656d6f7665206c617374206d656d6265722066726f6d20636f6e7472616374a2646970667358221220086b67729f96d4ec0b786aaa9d8dbf6e81127fc9162292cc6780fb4f3c2248cb64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "161:495:11:-:0;;;240:40;;;;;;;;;-1:-1:-1;266:10:11;;741:29:19;733:62;;;;;-1:-1:-1;;;733:62:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:29;818:15;805:12;:29::i;:::-;-1:-1:-1;;1146:7:7;:15;;-1:-1:-1;;1146:15:7;;;161:495:11;;6658:257:2;1535:7:7;;;;1534:8;1526:39;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;;;;6739:27:2::1;6758:7;6739:18;;;;;:27;;:::i;:::-;6776:11;:25:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;6776:25:2::1;-1:-1:-1::0;;;;;6776:25:2;::::1;::::0;;::::1;::::0;;;-1:-1:-1;6811:26:2;;;:17:::1;6776:25;6811:26:::0;;;;;;;:33;;-1:-1:-1;;6811:33:2::1;::::0;::::1;::::0;;6879:22:::1;::::0;:29:::1;::::0;:22;;:26:::1;::::0;::::1;;;:29:::0;::::1;:::i;:::-;6854:22;:54:::0;-1:-1:-1;6658:257:2:o;1309:133:19:-;1375:23;1390:7;1375:10;:14;;;;;;:23;;;;:::i;:::-;1413:22;;-1:-1:-1;;;;;1413:22:19;;;;;;;;1309:133;:::o;882:176:24:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:24:o;423:175:23:-;500:18;504:4;510:7;500:3;:18::i;:::-;499:19;491:63;;;;;-1:-1:-1;;;491:63:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;564:20:23;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;564:27:23;587:4;564:27;;;423:175::o;942:200::-;1014:4;-1:-1:-1;;;;;1038:21:23;;1030:68;;;;-1:-1:-1;;;1030:68:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1115:20:23;:11;:20;;;;;;;;;;;;;;;942:200::o;161:495:11:-;;;;;;;",
  "deployedSourceMap": "161:495:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2337:1764:2;;;;;;;;;;;;;:::i;:::-;;1106:104:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1106:104:19;-1:-1:-1;;;;;1106:104:19;;:::i;557:97:11:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4421:523:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4421:523:2;;:::i;6456:80::-;;;;;;;;;;;;;:::i;5085:598::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:111:19;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;989:111:19;-1:-1:-1;;;;;989:111:19;;:::i;:::-;;;;;;;;;;;;;;;;;;6006:108:2;;;;;;;;;;;;;:::i;424:127:11:-;;;;;;;;;;;;;:::i;6248:76:2:-;;;;;;;;;;;;;:::i;5795:111::-;;;;;;;;;;;;;:::i;1319:78:7:-;;;;;;;;;;;;;:::i;396:183:18:-;;;:::i;319:99:11:-;;;;;;;;;;;;;:::i;1216:87:19:-;;;;;;;;;;;;;:::i;2520:113:7:-;;;;;;;;;;;;;:::i;2337:1764:2:-;889:22:19;900:10;889;:22::i;:::-;881:84;;;;-1:-1:-1;;;881:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:7:7::1;::::0;::::1;;1534:8;1526:39;;;::::0;;-1:-1:-1;;;1526:39:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;;::::1;;2502:24:2::2;2529:42;2555:15;;2529:21;:25;;:42;;;;:::i;:::-;2502:69;;2608:1;2589:16;:20;2581:60;;;::::0;;-1:-1:-1;;;2581:60:2;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;2652:13;2668:44;2689:22;;2668:16;:20;;:44;;;;:::i;:::-;2652:60;;2738:1;2730:5;:9;2722:39;;;::::0;;-1:-1:-1;;;2722:39:2;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;2722:39:2;;;;;;;;;;;;;::::2;;2772:28;2803:43;2816:5;2823:22;;2803:12;:43::i;:::-;2772:74:::0;-1:-1:-1;2856:24:2::2;::::0;2891:364:::2;2923:11;:18:::0;2915:26;::::2;2891:364;;;2966:14;2983:11;2995:5;2983:18;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;-1:-1:-1;;;;;2983:18:2::2;3067:25:::0;;;:17:::2;:25:::0;;;;;;;;2983:18;;-1:-1:-1;3067:25:2::2;;:33;;2983:18:::0;3067:33:::2;3063:182;;;-1:-1:-1::0;;;;;3139:16:2;::::2;;::::0;;;:8:::2;:16;::::0;;;;;:27:::2;::::0;3160:5;3139:20:::2;:27::i;:::-;-1:-1:-1::0;;;;;3120:16:2;::::2;;::::0;;;:8:::2;:16;::::0;;;;:46;3203:27:::2;:16:::0;3224:5;3203:20:::2;:27::i;:::-;3184:46;;3063:182;-1:-1:-1::0;2943:7:2::2;;2891:364;;;-1:-1:-1::0;3358:15:2::2;::::0;:37:::2;::::0;3378:16;3358:19:::2;:37::i;:::-;3340:15;:55:::0;3805:40;;::::2;3797:89;;;;-1:-1:-1::0;;;3797:89:2::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3929:15;;3904:21;:40;3896:95;;;;-1:-1:-1::0;;;3896:95:2::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4047:22;::::0;4006:88:::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;;;;;;;4078:15:::2;::::0;4017:10:::2;::::0;4006:88:::2;::::0;;;;;;;::::2;1575:1:7;;;;2337:1764:2:o:0;1106:104:19:-;889:22;900:10;889;:22::i;:::-;881:84;;;;-1:-1:-1;;;881:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1182:21:::1;1195:7;1182:12;:21::i;:::-;1106:104:::0;:::o;557:97:11:-;626:21;557:97;:::o;4421:523:2:-;4491:10;4482:20;;;;:8;:20;;;;;;:30;-1:-1:-1;4482:30:2;4474:61;;;;;-1:-1:-1;;;4474:61:2;;;;;;;;;;;;-1:-1:-1;;;4474:61:2;;;;;;;;;;;;;;;4579:10;4545:22;4570:20;;;:8;:20;;;;;;4617:26;4570:20;4636:6;4617:18;:26::i;:::-;4662:10;4653:20;;;;:8;:20;;;;;:37;;;4813:15;;4600:43;;-1:-1:-1;4813:27:2;;4833:6;4813:19;:27::i;:::-;4795:15;:45;4850:27;;:10;;:27;;;;;4870:6;;4850:27;;;;4870:6;4850:10;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4892:45:2;;;;;;;;4921:15;;4901:10;;4892:45;;;;;;;;;4421:523;;:::o;6456:80::-;889:22:19;900:10;889;:22::i;:::-;881:84;;;;-1:-1:-1;;;881:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6514:15:2::1;:13;:15::i;:::-;6456:80::o:0;5085:598::-;5196:11;:18;5170:22;;5134:16;;-1:-1:-1;5170:44:2;5162:53;;;;;;5225:30;5272:22;;5258:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5258:37:2;;5225:70;;5417:13;5412:235;5444:11;:18;5436:26;;5412:235;;;5487:14;5504:11;5516:5;5504:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5504:18:2;5540:25;;;:17;:25;;;;;;;;5504:18;;-1:-1:-1;5540:25:2;;:33;;5504:18;5540:33;5536:101;;;5616:6;5593:13;5607:5;5593:20;;;;;;;;;;;;;:29;-1:-1:-1;;;;;5593:29:2;;;-1:-1:-1;;;;;5593:29:2;;;;;5536:101;-1:-1:-1;5464:7:2;;5412:235;;;-1:-1:-1;5663:13:2;-1:-1:-1;5085:598:2;:::o;989:111:19:-;1047:4;1070:23;1047:4;1085:7;1070:14;:23::i;:::-;1063:30;989:111;-1:-1:-1;;989:111:19:o;6006:108:2:-;6061:7;889:22:19;900:10;889;:22::i;:::-;881:84;;;;-1:-1:-1;;;881:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6096:10:2::1;6087:20;::::0;;;:8:::1;:20;::::0;;;;;6006:108;:::o;424:127:11:-;476:7;502:42;528:15;;502:21;:25;;:42;;;;:::i;:::-;495:49;;424:127;:::o;6248:76:2:-;889:22:19;900:10;889;:22::i;:::-;881:84;;;;-1:-1:-1;;;881:84:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6304:13:2::1;:11;:13::i;5795:111::-:0;5877:22;;5795:111;:::o;1319:78:7:-;1383:7;;;;1319:78;:::o;396:183:18:-;471:1;459:9;:13;451:59;;;;-1:-1:-1;;;451:59:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:47;;;545:9;525:47;;;;556:15;;533:10;;525:47;;;;;;;;;396:183::o;319:99:11:-;396:15;;319:99;:::o;1216:87:19:-;1269:27;1285:10;1269:15;:27::i;2520:113:7:-;1713:7;;;;1705:42;;;;;-1:-1:-1;;;1705:42:7;;;;;;;;;;;;-1:-1:-1;;;1705:42:7;;;;;;;;;;;;;;;2576:7:::1;:15:::0;;-1:-1:-1;;2576:15:7::1;::::0;;2606:20:::1;::::0;;2615:10:::1;2606:20:::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;2520:113::o:0;1309:133:19:-;1375:23;:10;1390:7;1375:14;:23::i;:::-;1413:22;;-1:-1:-1;;;;;1413:22:19;;;;;;;;1309:133;:::o;882:176:24:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:24:o;423:175:23:-;500:18;504:4;510:7;500:3;:18::i;:::-;499:19;491:63;;;;;-1:-1:-1;;;491:63:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;564:20:23;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;564:27:23;587:4;564:27;;;423:175::o;1329:134:24:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;3109:130::-;3167:7;3193:39;3197:1;3200;3193:39;;;;;;;;;;;;;;;;;:3;:39::i;2188:459::-;2246:7;2487:6;2483:45;;-1:-1:-1;2516:1:24;2509:8;;2483:45;2550:5;;;2554:1;2550;:5;:1;2573:5;;;;;:10;2565:56;;;;-1:-1:-1;;;2565:56:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6658:257:2;1535:7:7;;;;1534:8;1526:39;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;;;;6739:27:2::1;6758:7;6739:18;:27::i;:::-;6776:11;:25:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;6776:25:2::1;-1:-1:-1::0;;;;;6776:25:2;::::1;::::0;;::::1;::::0;;;-1:-1:-1;6811:26:2;;;:17:::1;6776:25;6811:26:::0;;;;:33;;-1:-1:-1;;6811:33:2::1;::::0;::::1;::::0;;6879:22:::1;::::0;:29:::1;::::0;:26:::1;:29::i;:::-;6854:22;:54:::0;-1:-1:-1;6658:257:2:o;2199:61:7:-;2243:10;:8;:10::i;942:200:23:-;1014:4;-1:-1:-1;;;;;1038:21:23;;1030:68;;;;-1:-1:-1;;;1030:68:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1115:20:23;:11;:20;;;;;;;;;;;;;;;942:200::o;1954:57:7:-;1996:8;:6;:8::i;7037:383:2:-;1535:7:7;;;;1534:8;1526:39;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;;;;7220:1:2::1;7195:22;;:26;7187:78;;;;-1:-1:-1::0;;;7187:78:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7275:30;7297:7;7275:21;:30::i;:::-;-1:-1:-1::0;;;;;7315:26:2;::::1;7344:5;7315:26:::0;;;:17:::1;:26;::::0;;;;:34;;-1:-1:-1;;7315:34:2::1;::::0;;7384:22:::1;::::0;:29:::1;::::0;7315:34;7384:26:::1;:29::i;1754:187:24:-:0;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:24;;;1754:187::o;3721:272::-;3807:7;3841:12;3834:5;3826:28;;;;-1:-1:-1;;;3826:28:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:9;3880:1;3876;:5;;;;;;;3721:272;-1:-1:-1;;;;;3721:272:24:o;2335:113:7:-;1535:7;;;;1534:8;1526:39;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;-1:-1:-1;;;1526:39:7;;;;;;;;;;;;;;;2404:4:::1;2394:14:::0;;-1:-1:-1;;2394:14:7::1;::::0;::::1;::::0;;2423:18:::1;::::0;;2430:10:::1;2423:18:::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;2335:113::o:0;1448:141:19:-;1517:26;:10;1535:7;1517:17;:26::i;:::-;1558:24;;-1:-1:-1;;;;;1558:24:19;;;;;;;;1448:141;:::o;673:180:23:-;752:18;756:4;762:7;752:3;:18::i;:::-;744:64;;;;-1:-1:-1;;;744:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;818:20:23;841:5;818:20;;;;;;;;;;;:28;;-1:-1:-1;;818:28:23;;;673:180::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity >=0.7.0 <0.8.0;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nimport \"../core/ContestTeam.sol\";\n\ncontract ContestTeamMock is ContestTeam {\n    using SafeMath for uint256;\n\n    constructor() ContestTeam(msg.sender) {}\n\n    // Helper testing functions.\n    function getReservedBalance() public view returns (uint256) {\n        return reservedBalance;\n    }\n\n    function getAvailableBalance() public view returns (uint256) {\n        return address(this).balance.sub(reservedBalance);\n    }\n\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n",
  "sourcePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol",
  "ast": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "AttendeeRole": [3142],
      "ContestTeam": [1114],
      "ContestTeamMock": [2747],
      "IPayable": [2987],
      "Pausable": [2607],
      "Payable": [3026],
      "Roles": [3618],
      "SafeMath": [3814]
    },
    "id": 2748,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2696,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "40:31:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2697,
        "nodeType": "ImportDirective",
        "scope": 2748,
        "sourceUnit": 3815,
        "src": "73:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2698,
        "nodeType": "ImportDirective",
        "scope": 2748,
        "sourceUnit": 1115,
        "src": "126:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2699,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1114,
              "src": "189:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1114",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2700,
            "nodeType": "InheritanceSpecifier",
            "src": "189:11:11"
          }
        ],
        "contractDependencies": [1114, 2607, 2987, 3026, 3142],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2747,
        "linearizedBaseContracts": [2747, 1114, 2607, 3142, 3026, 2987],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2703,
            "libraryName": {
              "id": 2701,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3814,
              "src": "213:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3814",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "207:27:11",
            "typeName": {
              "id": 2702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2710,
              "nodeType": "Block",
              "src": "278:2:11",
              "statements": []
            },
            "id": 2711,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2706,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "266:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "266:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2708,
                "modifierName": {
                  "id": 2705,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1114,
                  "src": "254:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1114_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "254:23:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:11"
            },
            "returnParameters": {
              "id": 2709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:11"
            },
            "scope": 2747,
            "src": "240:40:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2718,
              "nodeType": "Block",
              "src": "379:39:11",
              "statements": [
                {
                  "expression": {
                    "id": 2716,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 705,
                    "src": "396:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2715,
                  "id": 2717,
                  "nodeType": "Return",
                  "src": "389:22:11"
                }
              ]
            },
            "functionSelector": "d9a15549",
            "id": 2719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:2:11"
            },
            "returnParameters": {
              "id": 2715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2719,
                  "src": "370:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:9:11"
            },
            "scope": 2747,
            "src": "319:99:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2733,
              "nodeType": "Block",
              "src": "485:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2730,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "528:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2726,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "510:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "502:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2724,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "502:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "502:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "502:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3664,
                      "src": "502:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2723,
                  "id": 2732,
                  "nodeType": "Return",
                  "src": "495:49:11"
                }
              ]
            },
            "functionSelector": "809dab6a",
            "id": 2734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:2:11"
            },
            "returnParameters": {
              "id": 2723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2734,
                  "src": "476:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:9:11"
            },
            "scope": 2747,
            "src": "424:127:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2745,
              "nodeType": "Block",
              "src": "609:45:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2741,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "634:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "626:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "626:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "626:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "626:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2738,
                  "id": 2744,
                  "nodeType": "Return",
                  "src": "619:28:11"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 2746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:2:11"
            },
            "returnParameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2746,
                  "src": "600:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "599:9:11"
            },
            "scope": 2747,
            "src": "557:97:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2748,
        "src": "161:495:11"
      }
    ],
    "src": "40:617:11"
  },
  "legacyAST": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/mocks/ContestTeamMock.sol",
    "exportedSymbols": {
      "AttendeeRole": [3142],
      "ContestTeam": [1114],
      "ContestTeamMock": [2747],
      "IPayable": [2987],
      "Pausable": [2607],
      "Payable": [3026],
      "Roles": [3618],
      "SafeMath": [3814]
    },
    "id": 2748,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2696,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "40:31:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 2697,
        "nodeType": "ImportDirective",
        "scope": 2748,
        "sourceUnit": 3815,
        "src": "73:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeam.sol",
        "file": "../core/ContestTeam.sol",
        "id": 2698,
        "nodeType": "ImportDirective",
        "scope": 2748,
        "sourceUnit": 1115,
        "src": "126:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2699,
              "name": "ContestTeam",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1114,
              "src": "189:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestTeam_$1114",
                "typeString": "contract ContestTeam"
              }
            },
            "id": 2700,
            "nodeType": "InheritanceSpecifier",
            "src": "189:11:11"
          }
        ],
        "contractDependencies": [1114, 2607, 2987, 3026, 3142],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2747,
        "linearizedBaseContracts": [2747, 1114, 2607, 3142, 3026, 2987],
        "name": "ContestTeamMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2703,
            "libraryName": {
              "id": 2701,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3814,
              "src": "213:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3814",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "207:27:11",
            "typeName": {
              "id": 2702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2710,
              "nodeType": "Block",
              "src": "278:2:11",
              "statements": []
            },
            "id": 2711,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2706,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "266:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "266:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2708,
                "modifierName": {
                  "id": 2705,
                  "name": "ContestTeam",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1114,
                  "src": "254:11:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestTeam_$1114_$",
                    "typeString": "type(contract ContestTeam)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "254:23:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:11"
            },
            "returnParameters": {
              "id": 2709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:11"
            },
            "scope": 2747,
            "src": "240:40:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2718,
              "nodeType": "Block",
              "src": "379:39:11",
              "statements": [
                {
                  "expression": {
                    "id": 2716,
                    "name": "reservedBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 705,
                    "src": "396:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2715,
                  "id": 2717,
                  "nodeType": "Return",
                  "src": "389:22:11"
                }
              ]
            },
            "functionSelector": "d9a15549",
            "id": 2719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReservedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:2:11"
            },
            "returnParameters": {
              "id": 2715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2719,
                  "src": "370:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:9:11"
            },
            "scope": 2747,
            "src": "319:99:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2733,
              "nodeType": "Block",
              "src": "485:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2730,
                        "name": "reservedBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "528:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2726,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "510:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                                "typeString": "contract ContestTeamMock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                                "typeString": "contract ContestTeamMock"
                              }
                            ],
                            "id": 2725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "502:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2724,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "502:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "502:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "502:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3664,
                      "src": "502:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2723,
                  "id": 2732,
                  "nodeType": "Return",
                  "src": "495:49:11"
                }
              ]
            },
            "functionSelector": "809dab6a",
            "id": 2734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:2:11"
            },
            "returnParameters": {
              "id": 2723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2734,
                  "src": "476:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:9:11"
            },
            "scope": 2747,
            "src": "424:127:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2745,
              "nodeType": "Block",
              "src": "609:45:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2741,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "634:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                            "typeString": "contract ContestTeamMock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ContestTeamMock_$2747",
                            "typeString": "contract ContestTeamMock"
                          }
                        ],
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "626:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "626:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "626:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "626:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2738,
                  "id": 2744,
                  "nodeType": "Return",
                  "src": "619:28:11"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 2746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:2:11"
            },
            "returnParameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2746,
                  "src": "600:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "599:9:11"
            },
            "scope": 2747,
            "src": "557:97:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2748,
        "src": "161:495:11"
      }
    ],
    "src": "40:617:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-22T04:14:17.093Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_unpause()": {
        "details": "Internal implementation that lifts the paused state."
      },
      "balanceOf()": {
        "returns": {
          "_0": "The balance of a team member"
        }
      },
      "getActiveMembers()": {
        "returns": {
          "_0": "An array of addresses representing the accounts of active members"
        }
      },
      "getActiveMembersCount()": {
        "returns": {
          "_0": "{uint256} Count of active members"
        }
      },
      "isPaused()": {
        "returns": {
          "_0": "{true} if the contract is paused; otherwise, {false}."
        }
      },
      "pause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "splitPrize()": {
        "details": "Implements the \"withdraw pattern\" by allocating balances to team  members, so they can request a withdraw once the split is done."
      },
      "unpause()": {
        "details": "Implements the onlyAttendee modifier for access control."
      },
      "withdraw(uint256)": {
        "details": "Implements the \"withdraw pattern\" allowing members to withdraw funds. The method is public, so inactive members (that renounced membership) are still able to withdraw funds in case balance > 0. "
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deposit(address,uint256,uint256)": {
        "notice": "Event emitted when the contract receives a deposit."
      },
      "PrizeSplit(address,uint256,uint256,uint256,uint256)": {
        "notice": "emitted when the contract's balance (prize) is split between active members."
      },
      "Withdraw(address,uint256,uint256)": {
        "notice": "emitted when a member withdraws from the contract."
      }
    },
    "kind": "user",
    "methods": {
      "balanceOf()": {
        "notice": "Get the balance of a team member"
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getActiveMembers()": {
        "notice": "Gets the active members in the team."
      },
      "getActiveMembersCount()": {
        "notice": "Gets the number of active team members."
      },
      "isPaused()": {
        "notice": "Returns if the contract is paused or not."
      },
      "pause()": {
        "notice": "Trigger the paused state."
      },
      "splitPrize()": {
        "notice": "Splits the available's contract balance between active team members."
      },
      "unpause()": {
        "notice": "Lifts the paused state."
      },
      "withdraw(uint256)": {
        "notice": "Allows a team member to withdraw its funds from the contract."
      }
    },
    "version": 1
  }
}
