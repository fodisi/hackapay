{
  "contractName": "Hackathon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_description",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "initialOrganizer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "EvaluationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "JudgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "judgeAddress",
          "type": "address"
        }
      ],
      "name": "JudgeVoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OrganizerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "firstPlacePrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "secondPlacePrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thirdPlacePrize",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "PrizeAllocation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "RegistrationStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SubmissionStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "TeamProposalUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TeamStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalGrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rankPosition",
          "type": "uint8"
        }
      ],
      "name": "WinnerAnnouced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rankPosition",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOrganizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "approveTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeEvaluation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeSubmission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEvaluationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistrationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSubmissionStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "getTeam",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        }
      ],
      "name": "getTeamByAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWinnersIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isJudge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOrganizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openEvaluation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openSubmission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publishRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "teamName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "registerTeam",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOrganizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "reproveTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "teamIds",
          "type": "uint256[]"
        }
      ],
      "name": "reproveTeams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "teamIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "teamGrades",
          "type": "uint8[]"
        }
      ],
      "name": "submitEvaluation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "teamAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "grade",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "proposalData",
          "type": "bytes32"
        }
      ],
      "name": "updateProposalData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstPrize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "secondPrize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "thirdPrize",
          "type": "uint256"
        }
      ],
      "name": "allocatePrize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        }
      ],
      "name": "withdrawPrize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_description\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"initialOrganizer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EvaluationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"JudgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"judgeAddress\",\"type\":\"address\"}],\"name\":\"JudgeVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OrganizerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"firstPlacePrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"secondPlacePrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thirdPlacePrize\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"PrizeAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RegistrationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SubmissionStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"TeamProposalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"teamName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TeamStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalGrade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rankPosition\",\"type\":\"uint8\"}],\"name\":\"WinnerAnnouced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rankPosition\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOrganizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstPrize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondPrize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thirdPrize\",\"type\":\"uint256\"}],\"name\":\"allocatePrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"approveTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeEvaluation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEvaluationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrationStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubmissionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"getTeam\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"getTeamByAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinnersIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isJudge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOrganizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openEvaluation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publishRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"teamName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"registerTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOrganizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"}],\"name\":\"reproveTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"teamIds\",\"type\":\"uint256[]\"}],\"name\":\"reproveTeams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"teamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"teamGrades\",\"type\":\"uint8[]\"}],\"name\":\"submitEvaluation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"grade\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proposalData\",\"type\":\"bytes32\"}],\"name\":\"updateProposalData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"}],\"name\":\"withdrawPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For the payment functionality, the \\\"withdraw pattern\\\" is being implemented for this contract. The ledger allocation is done is the method {allocatePrize} and the withdraw is implemented on {withdrawPrize}.\",\"events\":{\"PrizeAllocation(uint256,uint256,uint256,address,uint256)\":{\"details\":\"emitted when the prize allocation is performed. This may be used to alert winners that their prizes are available to withdraw.\"},\"Withdraw(address,uint256,uint8,address,uint256)\":{\"details\":\"emitted when a prize is withdraw by a winner team.\"}},\"kind\":\"dev\",\"methods\":{\"allocatePrize(uint256,uint256,uint256)\":{\"details\":\"It does not associate the prize with a specific account, since prizes cound be associated any moment by the organizers, as long as prizes were not allocated before. The contract needs to have enought balance to allocate funds to winners.\"},\"approveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be approved\"}},\"closeEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"closeRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"closeSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"constructor\":{\"params\":{\"_description\":\"{bytes32} Hackathon's description. Optional.\",\"_id\":\"{uint256} Hackathon's unique indentifier\",\"_name\":\"{bytes32} Hackathon's name. Required.\"}},\"getEvaluationStatus()\":{\"returns\":{\"_0\":\"{bool} returns {true} if enabled; otherwise, {false}.\"}},\"getRegistrationStatus()\":{\"returns\":{\"_0\":\"{bool} returns {true} if enabled; otherwise, {false}.\"}},\"getSubmissionStatus()\":{\"returns\":{\"_0\":\"{bool} returns {true} if enabled; otherwise, {false}.\"}},\"getTeam(uint256)\":{\"params\":{\"teamId\":\"{uint256} the team's unique identifier returned on registration\"},\"returns\":{\"_0\":\"{bytes32} team's name\",\"_1\":\"{address} team's address\",\"_2\":\"{bytes32} team's proposal data\",\"_3\":\"{bool} team's status: {true} for approved; {false} for reproved;\",\"_4\":\"{uint256} team's grade\"}},\"getTeamByAddress(address)\":{\"params\":{\"teamAddress\":\"{address} the team's contract address used on registration\"},\"returns\":{\"_0\":\"{bytes32} team's name\",\"_1\":\"{address} team's address\",\"_2\":\"{bytes32} team's proposal data\",\"_3\":\"{bool} team's status: {true} for approved; {false} for reproved;\",\"_4\":\"{uint256} team's grade\"}},\"getWinnersIds()\":{\"returns\":{\"_0\":\"{uint256} First place's id\",\"_1\":\"{uint256} Second place's id\",\"_2\":\"{uint256} Third place's id\"}},\"openEvaluation()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"openRegistration()\":{\"details\":\"Overwritten to add modifier for access control.\"},\"openSubmission()\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\"},\"publishRank()\":{\"details\":\"emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place).\"},\"registerTeam(bytes32,address,bytes32)\":{\"details\":\"Registration process must be open.\",\"params\":{\"teamName\":\"{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required\"}},\"reproveTeam(uint256)\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamId\":\"{uint256} the ids of the teams to be reproved\"}},\"reproveTeams(uint256[])\":{\"details\":\"Should be overwritten on inherited contract to add modifier or require statements for access control.\",\"params\":{\"teamIds\":\"{uint256[]} an array containing the ids of the teams to be reproved\"}},\"submitEvaluation(uint256[],uint8[])\":{\"details\":\"The position of teamId and teamGrade must be the same in the array. For example, if teamId \\\"1\\\" is sent at {teamIds} array position \\\"5\\\" (zero-based), the grade for team \\\"1\\\" must be sent at position \\\"5\\\" in {teamGrades} array.\",\"params\":{\"teamGrades\":\"Array of the grades given by the judge for each team.\",\"teamIds\":\"Array of the ids associated with each team that is going to be evaluated.\"}},\"updateProposalData(uint256,bytes32)\":{\"params\":{\"proposalData\":\"the updated data for the team's proposal\",\"teamId\":\"team's unique identifier; required\"}},\"withdrawPrize(address)\":{\"details\":\"Winners must implement IPayable to receive funds.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256,uint256)\":{\"notice\":\"Event emitted when the contract receives a deposit.\"}},\"kind\":\"user\",\"methods\":{\"addJudge(address)\":{\"notice\":\"@dev Needs to be implemented by a inherited contract.\"},\"allocatePrize(uint256,uint256,uint256)\":{\"notice\":\"Allows the organizer to allocate funds that's going to be distributed to winners.\"},\"approveTeam(uint256)\":{\"notice\":\"(re)approves a team in participating in the contest\"},\"closeEvaluation()\":{\"notice\":\"Closes the evaluation process\"},\"closeRegistration()\":{\"notice\":\"Closes the registration process\"},\"closeSubmission()\":{\"notice\":\"Closes the proposal submission process\"},\"constructor\":{\"notice\":\"Creates a new Hackathon contract with a specific _id, _name, desciption, and a specific organizer.\"},\"deposit()\":{\"notice\":\"Allows the contract to receive funds.\"},\"getEvaluationStatus()\":{\"notice\":\"Gets the evaluation status\"},\"getRegistrationStatus()\":{\"notice\":\"Gets the registration status\"},\"getSubmissionStatus()\":{\"notice\":\"Gets the submission status\"},\"getTeam(uint256)\":{\"notice\":\"Returns the stored information of a team\"},\"getTeamByAddress(address)\":{\"notice\":\"Returns the stored information of a team, based on a provided address\"},\"getWinnersIds()\":{\"notice\":\"Gets the id of the winner teams.\"},\"openEvaluation()\":{\"notice\":\"Opens the evaluation process\"},\"openRegistration()\":{\"notice\":\"Opens the registration process\"},\"openSubmission()\":{\"notice\":\"Opens the proposal submission process\"},\"publishRank()\":{\"notice\":\"Published the ranking results of the contest.\"},\"registerTeam(bytes32,address,bytes32)\":{\"notice\":\"Registers a new team in the contest registry.\"},\"reproveTeam(uint256)\":{\"notice\":\"reproves a team from participating in the contest\"},\"reproveTeams(uint256[])\":{\"notice\":\"reprove teams from participating in the contest\"},\"submitEvaluation(uint256[],uint8[])\":{\"notice\":\"Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once.\"},\"updateProposalData(uint256,bytes32)\":{\"notice\":\"Updates the proposal data for a specific team.\"},\"withdrawPrize(address)\":{\"notice\":\"Allows withdrawing prizes to winners.\"}},\"notice\":\"Represents a hackathon contest, where organizers can control the stages/phases of the contest (such as registration, submission, evaluation and results) as well as pay prizes to the winners.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol\":\"Hackathon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol\":{\"keccak256\":\"0xd1196a748082cce096e21d641038731001120bb5541da30f790f60e25755f47f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8bca457ac99eada6a9ced6bce02820693a3a01d593b999f53efd2de08e76d1ff\",\"dweb:/ipfs/QmV5ZNGfyjhfXD8g9Akt2bLm8dthjfe5bCm1xdXSbgm3sS\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestTeamRegistry.sol\":{\"keccak256\":\"0xa34a43eda649b6f5f47ef78ad39ba98b57740fe1a8fe666c352c417144a766ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c2058149325eced44944dce8741d1f4868c6fe37940989fe8974ed0ed24d5069\",\"dweb:/ipfs/QmcvTo6aeZpeaPcjH23WAs7VqMyVNvhTCEEqhQ691AwXAp\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol\":{\"keccak256\":\"0xa6adf649500cc03ab551c7fb0c646f1bb90190d9d8fc26f6b9d9b786a71faa78\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://589c93299c47afbc897d500d66cc2263f8250cb1205868261f00042d98e3f062\",\"dweb:/ipfs/QmcBMUCdUaaDVQJbMaHNXwfJ3QeA3qW7gVwDyfDUdBoqmQ\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/IPayable.sol\":{\"keccak256\":\"0xda284e0ea3af452620000a3133e06e8bb2967c77bbea1555dbc1610eda3032b4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9594b85a4979a5acb339af4f9108435c70c7e45f45a1845ccb6ad3e1d96ef9ae\",\"dweb:/ipfs/QmetoPvij8DkdBhsXZhn9PPVXqhous5kergnVfX637YzkZ\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/Payable.sol\":{\"keccak256\":\"0xda9c92360a895c084591af056cd6d6c1b5892a8adc04d07c35561b508787293d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://17ec30af1c9853d300761b4a7742d2e695fcc8ad6712d39cfed9270cbdf901e4\",\"dweb:/ipfs/QmUHTVC4kSmR37aBgAkPsU6dMX39mEwHmDZtArqPEokBnk\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/ContestRoleManager.sol\":{\"keccak256\":\"0xfb0bb3050cc55bbbc446e3391a90762d043ca3ee4032d4e785f2770a20578d02\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bedc7d0fcfb279c9b67d99c1bac3adb309b162b533ed532adacd6ef3fb7d95f5\",\"dweb:/ipfs/QmNT5tR22EDiHXzZUQQFRKWtwFz7yjCT9g52V1EiCjFC9c\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/JudgeRole.sol\":{\"keccak256\":\"0x3c0d61ec0a2f047a4d0576cf326793d622b9e179747305c9a13b941b47f5e8a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77d7ba2b0fca24887e527d45be5710f7ae9235140710909fa84e0c036662bb22\",\"dweb:/ipfs/QmYizUtFZR4TAcnCkgeR9AGcoZnfhggxKPm31xTwP3KPTw\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/OrganizerRole.sol\":{\"keccak256\":\"0x0c17393f30884f60b569af8fa1b984136bff5cf02514e591a4f9dcb6037e8820\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f9b90fa964b5298679ec55ac6a385e0c0d1a47943b2dc8f702f936ffc86b3073\",\"dweb:/ipfs/QmWoGAkt4iqkX9oD2gFo9ncPDcJga6u8PpK3SZDYpwGgS7\"]},\"/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/roles/Roles.sol\":{\"keccak256\":\"0xa2b42f0e55cbc7aa021e27a6d433231aef7afa7bcb67ad2b591122d4cffa2b10\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://251d332eafdcc13078f201e14296a0280e29cce88040905d786d4571bba84eea\",\"dweb:/ipfs/QmWYu8To6JMBy46CgXVv9o7biZbsARWh4H5h2zpcjGW6qG\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200354038038062003540833981810160405260808110156200003757600080fd5b50805160208201516040830151606090930151919290918080806001600160a01b038116620000ad576040805162461bcd60e51b815260206004820152601460248201527f496e76616c6964207a65726f2061646472657373000000000000000000000000604482015290519081900360640190fd5b620000b88162000144565b50849150600090501a60f81b7fff000000000000000000000000000000000000000000000000000000000000001662000127576040805162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206e616d6560a01b604482015290519081900360640190fd5b50602292909255602355602455602b805460ff191690556200037f565b6200015a81620001de60201b620023241760201c565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60209081526040909120805460ff191683179055600a54620001d892909162000230811b6200236617901c565b600a5550565b620001f98160046200029260201b620023c71790919060201c565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b6000828201838110156200028b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6200029e828262000316565b15620002f1576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200035f5760405162461bcd60e51b81526004018080602001828103825260228152602001806200351e6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61318f806200038f6000396000f3fe6080604052600436106101ed5760003560e01c80637dc673bc1161010d578063d06e4ee7116100a0578063eaf2f9cd1161006f578063eaf2f9cd14610728578063ed896d6614610758578063f540548b1461078b578063f59ec3f9146107b5578063ffc6ff1e146107eb576101ed565b8063d06e4ee7146106c3578063d0e30db0146106d8578063e35fb241146106e0578063e4725f02146106f5576101ed565b8063ae237c77116100dc578063ae237c7714610651578063ae2ac4ae14610666578063af640d0f14610699578063b2a13f92146106ae576101ed565b80637dc673bc146105df57806390d768e4146105f4578063927cab4714610609578063a2bce8bd1461063c576101ed565b80634b30b66f1161018557806358e2f50e1161015457806358e2f50e146105435780637284e41614610558578063737a63401461056d5780637385712c146105a0576101ed565b80634b30b66f146104d15780634ea701a8146104e657806354e1db2b14610519578063567ad8621461052e576101ed565b8063288c4a46116101c1578063288c4a46146102d75780633e091f64146103545780633ed2b77a1461042357806341676f151461048a576101ed565b80628e0f1b146101f257806306fdde031461025157806311dc45c91461027857806324ba9fab146102ad575b600080fd5b3480156101fe57600080fd5b5061021c6004803603602081101561021557600080fd5b5035610800565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b34801561025d57600080fd5b506102666108e4565b60408051918252519081900360200190f35b34801561028457600080fd5b506102ab6004803603602081101561029b57600080fd5b50356001600160a01b03166108ea565b005b3480156102b957600080fd5b506102ab600480360360208110156102d057600080fd5b5035610cf8565b3480156102e357600080fd5b506102ab600480360360208110156102fa57600080fd5b81019060208101813564010000000081111561031557600080fd5b82018360208201111561032757600080fd5b8035906020019184602083028401116401000000008311171561034957600080fd5b509092509050610d04565b34801561036057600080fd5b506102ab6004803603604081101561037757600080fd5b81019060208101813564010000000081111561039257600080fd5b8201836020820111156103a457600080fd5b803590602001918460208302840111640100000000831117156103c657600080fd5b9193909290916020810190356401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184602083028401116401000000008311171561041857600080fd5b509092509050610d44565b34801561042f57600080fd5b5061044d6004803603602081101561044657600080fd5b50356110d3565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b34801561049657600080fd5b506104bd600480360360208110156104ad57600080fd5b50356001600160a01b0316611129565b604080519115158252519081900360200190f35b3480156104dd57600080fd5b506102ab61113e565b3480156104f257600080fd5b5061021c6004803603602081101561050957600080fd5b50356001600160a01b0316611149565b34801561052557600080fd5b506104bd61121a565b34801561053a57600080fd5b506102ab611228565b34801561054f57600080fd5b506102ab611231565b34801561056457600080fd5b506102666112cf565b34801561057957600080fd5b506105826112d5565b60408051938452602084019290925282820152519081900360600190f35b3480156105ac57600080fd5b50610266600480360360608110156105c357600080fd5b508035906001600160a01b0360208201351690604001356112e3565b3480156105eb57600080fd5b506102ab6116b0565b34801561060057600080fd5b506102ab61174c565b34801561061557600080fd5b506102ab6004803603602081101561062c57600080fd5b50356001600160a01b0316611c12565b34801561064857600080fd5b506104bd611c5f565b34801561065d57600080fd5b506102ab611c68565b34801561067257600080fd5b506102ab6004803603602081101561068957600080fd5b50356001600160a01b0316611d02565b3480156106a557600080fd5b50610266611d4f565b3480156106ba57600080fd5b506102ab611d55565b3480156106cf57600080fd5b506102ab611dee565b6102ab611e89565b3480156106ec57600080fd5b506104bd611f01565b34801561070157600080fd5b506102ab6004803603602081101561071857600080fd5b50356001600160a01b0316611f0a565b34801561073457600080fd5b506102ab6004803603604081101561074b57600080fd5b5080359060200135611f57565b34801561076457600080fd5b506104bd6004803603602081101561077b57600080fd5b50356001600160a01b03166120c3565b34801561079757600080fd5b506102ab600480360360208110156107ae57600080fd5b50356120d0565b3480156107c157600080fd5b506102ab600480360360608110156107d857600080fd5b50803590602081013590604001356120d9565b3480156107f757600080fd5b506102ab612285565b60008060008060008561081281612448565b610855576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b60006001888154811061086457fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b60235481565b60215460ff1661093a576040805162461bcd60e51b815260206004820152601660248201527514985b9ac81b9bdd081c1d589b1a5cda1959081e595d60521b604482015290519081900360640190fd5b602b5460ff16610991576040805162461bcd60e51b815260206004820152601860248201527f5072697a6573206e6f7420616c6c6f6361746564207965740000000000000000604482015290519081900360640190fd5b806001600160a01b0381166109e4576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b6001600160a01b038116301415610a2c5760405162461bcd60e51b8152600401808060200182810382526032815260200180612fba6032913960400191505060405180910390fd5b81610a368161244f565b610a87576040805162461bcd60e51b815260206004820152601f60248201527f4163636f756e742061646472657373206973206e6f7420612077696e6e657200604482015290519081900360640190fd5b601154600090819081906001600160a01b0387811691161415610b115750506011546025546026546001600160a01b0390921692509060019060ff1615610aff5760405162461bcd60e51b815260040180806020018281038252602281526020018061302f6022913960400191505060405180910390fd5b6026805460ff19166001179055610c4e565b6017546001600160a01b0387811691161415610b945750506017546027546028546001600160a01b0390921692509060029060ff1615610b825760405162461bcd60e51b81526004018080602001828103825260238152602001806131376023913960400191505060405180910390fd5b6028805460ff19166001179055610c4e565b601d546001600160a01b0387811691161415610c17575050601d54602954602a546001600160a01b0390921692509060039060ff1615610c055760405162461bcd60e51b81526004018080602001828103825260228152602001806130906022913960400191505060405180910390fd5b602a805460ff19166001179055610c4e565b60405162461bcd60e51b8152600401808060200182810382526043815260200180612fec6043913960600191505060405180910390fd5b6040805183815260ff831660208201524281830152905133916001600160a01b038616917f24cc64e111181860a0e50314e2717d8d86bc21fb600e5681040e47cd5eab7f079181900360600190a3826001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cd757600080fd5b505af1158015610ceb573d6000803e3d6000fd5b5050505050505050505050565b610d0181612496565b50565b610d408282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506125d292505050565b5050565b600e5460ff16610d92576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b610d9b336120c3565b610dd65760405162461bcd60e51b815260040180806020018281038252602b815260200180612f3b602b913960400191505060405180910390fd5b828114610e145760405162461bcd60e51b81526004018080602001828103825260338152602001806130b26033913960400191505060405180910390fd5b6002548314610e545760405162461bcd60e51b815260040180806020018281038252603f815260200180613051603f913960400191505060405180910390fd5b600060025411610eab576040805162461bcd60e51b815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff1615610f055760405162461bcd60e51b8152600401808060200182810382526022815260200180612f196022913960400191505060405180910390fd5b60005b600254811015611073576000868683818110610f2057fe5b9050602002013590506000858584818110610f3757fe5b9050602002013560ff169050610f4c82612448565b610f8f576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b610f9882612602565b610fe0576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b610fe981612696565b61102a576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420677261646560981b604482015290519081900360640190fd5b60006001838154811061103957fe5b906000526020600020906006020190506110638260ff16826005015461236690919063ffffffff16565b6005909101555050600101610f08565b5060018101805460ff60a81b1916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b600181815481106110e357600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b60006111366004836126a2565b90505b919050565b61114733612709565b565b6000808080806001600160a01b0386166111a1576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b505050506001600160a01b0391821660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909516928501839052600381015460608601819052600482015460ff1615156080870181905260059092015460a09096018690529195929491935091565b600354610100900460ff1690565b61114733612739565b600354610100900460ff1615611283576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b61128c33611129565b6112c75760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612776565b60245481565b600f54601554601b54909192565b60035460009060ff16611336576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b8360001a60f81b6001600160f81b031916611398576040805162461bcd60e51b815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b0383166113f3576040805162461bcd60e51b815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615611463576040805162461bcd60e51b815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600180546040805160c081018252828152602081018881526001600160a01b038881169383019384526060830188815260808401878152600060a08601818152888a018a559089905285517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660068a029081019190915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf786015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8850180546001600160a01b0319169190941617909255517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8201805460ff191691151591909117905591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90920191909155825491929091839081106115cb57fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff199092169190911790556005918201549190920155905461165c91612366565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff16611700576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b61170933611129565b6117445760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b6111476127c6565b60035460ff161561179b576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b600354610100900460ff16156117ed576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b600e5460ff161561183a576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b61184333611129565b61187e5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b60215460ff16156118cf576040805162461bcd60e51b815260206004820152601660248201527514985b9ac8185b1c9958591e481c1d589b1a5cda195960521b604482015290519081900360640190fd5b60006002541161191c576040805162461bcd60e51b8152602060048201526013602482015272139bc81d19585b5cc81c9959da5cdd195c9959606a1b604482015290519081900360640190fd5b611924612ec2565b61192c612ec2565b611934612ec2565b61193c612ec2565b60005b600154811015611a27576001818154811061195657fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a08201529550806119ce57508160a001518560a00151105b156119d857611a1f565b8360a001518560a0015111156119f2578493929150611a1f565b8260a001518560a001511115611a0b5784929150611a1f565b8160a001518560a001511115611a1f578491505b60010161193f565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b611c1b33611129565b611c565760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b610d0181612806565b600e5460ff1690565b600e5460ff16611cb6576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b611cbf33611129565b611cfa5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612997565b611d0b33611129565b611d465760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b610d0181612709565b60225481565b600e5460ff1615611da2576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b611dab33611129565b611de65760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b6111476129d7565b60035460ff1615611e3d576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b611e4633611129565b611e815760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612a21565b60003411611ec85760405162461bcd60e51b8152600401808060200182810382526021815260200180612ef86021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60035460ff1690565b611f1333611129565b611f4e5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b610d0181612a6b565b81611f6181612448565b611fa4576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b82611fae81612602565b611ff6576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600354610100900460ff16612049576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b60006001858154811061205857fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b60006111366005836126a2565b610d0181612ae2565b6120e233611129565b61211d5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b602b5460ff1615612175576040805162461bcd60e51b815260206004820152601860248201527f5072697a657320616c726561647920616c6c6f63617465640000000000000000604482015290519081900360640190fd5b600061218b826121858686612366565b90612366565b9050478111156121cc5760405162461bcd60e51b81526004018080602001828103825260308152602001806131076030913960400191505060405180910390fd5b6040805180820182528581526000602091820181905260258790556026805460ff1990811690915583518085018552878152830182905260278790556028805482169055835180850185528681528301919091526029859055602a805482169055602b805490911660011790558151868152908101859052808201849052426060820152905133917f60e7ffaf15f306ac55b9117669d2fd27994d49f2ccf8490fc874df9ebb5706aa919081900360800190a250505050565b600354610100900460ff166122d8576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b6122e133611129565b61231c5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612bbd565b61232f6004826123c7565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b6000828201838110156123c0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6123d182826126a2565b15612423576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001541190565b6011546000906001600160a01b038381169116148061247b57506017546001600160a01b038381169116145b80611136575050601d546001600160a01b0390811691161490565b806124a081612448565b6124e3576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b816124ed81612602565b15612537576040805162461bcd60e51b81526020600482015260156024820152742a32b0b69034b9903737ba103932b83937bb32b21760591b604482015290519081900360640190fd5b60006001848154811061254657fe5b600091825260209091206004600690920201908101805460ff191660019081179091556002549192506125799190612366565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b8151811015610d40576125fa8282815181106125ed57fe5b6020026020010151612ae2565b6001016125d5565b600061260d82612448565b61261957506000611139565b60006001838154811061262857fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b60006001600160a01b0382166126e95760405162461bcd60e51b81526004018080602001828103825260228152602001806130e56022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61271281612c08565b6001600160a01b03166000908152600d60205260409020600101805460ff60a01b19169055565b61274281612c45565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a54612770906001612c87565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b61280f81612cc9565b6000600c80549050905060006040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c8190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b612a7481612324565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a5461277091612366565b80612aec81612448565b612b2f576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b81612b3981612602565b612b81576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600060018481548110612b9057fe5b6000918252602090912060069091020160048101805460ff19169055600254909150612579906001612c87565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b612c1181612d40565b6001600160a01b0381166000908152600860205260409020805460ff19169055600754612c3f906001612c87565b60075550565b612c50600482612d82565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b60006123c083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612de9565b612cd281612e80565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff191682179055600754612c3f91612366565b612d4b600582612d82565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b612d8c82826126a2565b612dc75760405162461bcd60e51b8152600401808060200182810382526021815260200180612f996021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60008184841115612e785760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e3d578181015183820152602001612e25565b50505050905090810190601f168015612e6a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612e8b6005826123c7565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091529056fe6d73672e76616c7565206d757374206265206772656174686572207468616e20304a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65416464726573732063616e6e6f7420626520657175616c20746f20636f6e7472616374202874686973292061646472657373496e76616c696420616464726573732e204164647265737320636865636b206661696c65642e2053686f756c64206e6f74207265616368207468697320706f696e742e5072697a6520616c7265616479207061696420666f7220666972737420706c6163657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d735072697a6520616c7265616479207061696420666f7220746869726420706c6163654c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f7420656e6f7567682066756e647320617661696c61626c6520696e206861636b6174686f6e20636f6e74726163745072697a6520616c7265616479207061696420666f72207365636f6e6420706c616365a2646970667358221220e32bda6b0d1a14af7f7e5458be4fececb72320d5bc94fe828921668964ece24964736f6c63430007060033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106101ed5760003560e01c80637dc673bc1161010d578063d06e4ee7116100a0578063eaf2f9cd1161006f578063eaf2f9cd14610728578063ed896d6614610758578063f540548b1461078b578063f59ec3f9146107b5578063ffc6ff1e146107eb576101ed565b8063d06e4ee7146106c3578063d0e30db0146106d8578063e35fb241146106e0578063e4725f02146106f5576101ed565b8063ae237c77116100dc578063ae237c7714610651578063ae2ac4ae14610666578063af640d0f14610699578063b2a13f92146106ae576101ed565b80637dc673bc146105df57806390d768e4146105f4578063927cab4714610609578063a2bce8bd1461063c576101ed565b80634b30b66f1161018557806358e2f50e1161015457806358e2f50e146105435780637284e41614610558578063737a63401461056d5780637385712c146105a0576101ed565b80634b30b66f146104d15780634ea701a8146104e657806354e1db2b14610519578063567ad8621461052e576101ed565b8063288c4a46116101c1578063288c4a46146102d75780633e091f64146103545780633ed2b77a1461042357806341676f151461048a576101ed565b80628e0f1b146101f257806306fdde031461025157806311dc45c91461027857806324ba9fab146102ad575b600080fd5b3480156101fe57600080fd5b5061021c6004803603602081101561021557600080fd5b5035610800565b604080519586526001600160a01b03909416602086015284840192909252151560608401526080830152519081900360a00190f35b34801561025d57600080fd5b506102666108e4565b60408051918252519081900360200190f35b34801561028457600080fd5b506102ab6004803603602081101561029b57600080fd5b50356001600160a01b03166108ea565b005b3480156102b957600080fd5b506102ab600480360360208110156102d057600080fd5b5035610cf8565b3480156102e357600080fd5b506102ab600480360360208110156102fa57600080fd5b81019060208101813564010000000081111561031557600080fd5b82018360208201111561032757600080fd5b8035906020019184602083028401116401000000008311171561034957600080fd5b509092509050610d04565b34801561036057600080fd5b506102ab6004803603604081101561037757600080fd5b81019060208101813564010000000081111561039257600080fd5b8201836020820111156103a457600080fd5b803590602001918460208302840111640100000000831117156103c657600080fd5b9193909290916020810190356401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184602083028401116401000000008311171561041857600080fd5b509092509050610d44565b34801561042f57600080fd5b5061044d6004803603602081101561044657600080fd5b50356110d3565b6040805196875260208701959095526001600160a01b039093168585015260608501919091521515608084015260a0830152519081900360c00190f35b34801561049657600080fd5b506104bd600480360360208110156104ad57600080fd5b50356001600160a01b0316611129565b604080519115158252519081900360200190f35b3480156104dd57600080fd5b506102ab61113e565b3480156104f257600080fd5b5061021c6004803603602081101561050957600080fd5b50356001600160a01b0316611149565b34801561052557600080fd5b506104bd61121a565b34801561053a57600080fd5b506102ab611228565b34801561054f57600080fd5b506102ab611231565b34801561056457600080fd5b506102666112cf565b34801561057957600080fd5b506105826112d5565b60408051938452602084019290925282820152519081900360600190f35b3480156105ac57600080fd5b50610266600480360360608110156105c357600080fd5b508035906001600160a01b0360208201351690604001356112e3565b3480156105eb57600080fd5b506102ab6116b0565b34801561060057600080fd5b506102ab61174c565b34801561061557600080fd5b506102ab6004803603602081101561062c57600080fd5b50356001600160a01b0316611c12565b34801561064857600080fd5b506104bd611c5f565b34801561065d57600080fd5b506102ab611c68565b34801561067257600080fd5b506102ab6004803603602081101561068957600080fd5b50356001600160a01b0316611d02565b3480156106a557600080fd5b50610266611d4f565b3480156106ba57600080fd5b506102ab611d55565b3480156106cf57600080fd5b506102ab611dee565b6102ab611e89565b3480156106ec57600080fd5b506104bd611f01565b34801561070157600080fd5b506102ab6004803603602081101561071857600080fd5b50356001600160a01b0316611f0a565b34801561073457600080fd5b506102ab6004803603604081101561074b57600080fd5b5080359060200135611f57565b34801561076457600080fd5b506104bd6004803603602081101561077b57600080fd5b50356001600160a01b03166120c3565b34801561079757600080fd5b506102ab600480360360208110156107ae57600080fd5b50356120d0565b3480156107c157600080fd5b506102ab600480360360608110156107d857600080fd5b50803590602081013590604001356120d9565b3480156107f757600080fd5b506102ab612285565b60008060008060008561081281612448565b610855576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b60006001888154811061086457fe5b60009182526020918290206040805160c08101825260069390930290910180548352600181015493830184905260028101546001600160a01b0316918301829052600381015460608401819052600482015460ff1615156080850181905260059092015460a0909401849052939c919b5092995091975095509350505050565b60235481565b60215460ff1661093a576040805162461bcd60e51b815260206004820152601660248201527514985b9ac81b9bdd081c1d589b1a5cda1959081e595d60521b604482015290519081900360640190fd5b602b5460ff16610991576040805162461bcd60e51b815260206004820152601860248201527f5072697a6573206e6f7420616c6c6f6361746564207965740000000000000000604482015290519081900360640190fd5b806001600160a01b0381166109e4576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b6001600160a01b038116301415610a2c5760405162461bcd60e51b8152600401808060200182810382526032815260200180612fba6032913960400191505060405180910390fd5b81610a368161244f565b610a87576040805162461bcd60e51b815260206004820152601f60248201527f4163636f756e742061646472657373206973206e6f7420612077696e6e657200604482015290519081900360640190fd5b601154600090819081906001600160a01b0387811691161415610b115750506011546025546026546001600160a01b0390921692509060019060ff1615610aff5760405162461bcd60e51b815260040180806020018281038252602281526020018061302f6022913960400191505060405180910390fd5b6026805460ff19166001179055610c4e565b6017546001600160a01b0387811691161415610b945750506017546027546028546001600160a01b0390921692509060029060ff1615610b825760405162461bcd60e51b81526004018080602001828103825260238152602001806131376023913960400191505060405180910390fd5b6028805460ff19166001179055610c4e565b601d546001600160a01b0387811691161415610c17575050601d54602954602a546001600160a01b0390921692509060039060ff1615610c055760405162461bcd60e51b81526004018080602001828103825260228152602001806130906022913960400191505060405180910390fd5b602a805460ff19166001179055610c4e565b60405162461bcd60e51b8152600401808060200182810382526043815260200180612fec6043913960600191505060405180910390fd5b6040805183815260ff831660208201524281830152905133916001600160a01b038616917f24cc64e111181860a0e50314e2717d8d86bc21fb600e5681040e47cd5eab7f079181900360600190a3826001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cd757600080fd5b505af1158015610ceb573d6000803e3d6000fd5b5050505050505050505050565b610d0181612496565b50565b610d408282808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506125d292505050565b5050565b600e5460ff16610d92576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b610d9b336120c3565b610dd65760405162461bcd60e51b815260040180806020018281038252602b815260200180612f3b602b913960400191505060405180910390fd5b828114610e145760405162461bcd60e51b81526004018080602001828103825260338152602001806130b26033913960400191505060405180910390fd5b6002548314610e545760405162461bcd60e51b815260040180806020018281038252603f815260200180613051603f913960400191505060405180910390fd5b600060025411610eab576040805162461bcd60e51b815260206004820152601d60248201527f4e6f20617070726f766564207465616d7320746f206576616c75617465000000604482015290519081900360640190fd5b336000908152600d602052604090206001810154600160a81b900460ff1615610f055760405162461bcd60e51b8152600401808060200182810382526022815260200180612f196022913960400191505060405180910390fd5b60005b600254811015611073576000868683818110610f2057fe5b9050602002013590506000858584818110610f3757fe5b9050602002013560ff169050610f4c82612448565b610f8f576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b610f9882612602565b610fe0576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b610fe981612696565b61102a576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420677261646560981b604482015290519081900360640190fd5b60006001838154811061103957fe5b906000526020600020906006020190506110638260ff16826005015461236690919063ffffffff16565b6005909101555050600101610f08565b5060018101805460ff60a81b1916600160a81b17908190558154604080516001600160a01b0390931683525190917fd62869bbd78965284c34750092d78b62093e2d02b730d0ce696ebdcb371bb5dc919081900360200190a25050505050565b600181815481106110e357600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493955091936001600160a01b039091169260ff9091169086565b60006111366004836126a2565b90505b919050565b61114733612709565b565b6000808080806001600160a01b0386166111a1576040805162461bcd60e51b8152602060048201526014602482015273496e76616c6964207a65726f206164647265737360601b604482015290519081900360640190fd5b505050506001600160a01b0391821660009081526020818152604091829020825160c0810184528154815260018201549281018390526002820154909516928501839052600381015460608601819052600482015460ff1615156080870181905260059092015460a09096018690529195929491935091565b600354610100900460ff1690565b61114733612739565b600354610100900460ff1615611283576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b61128c33611129565b6112c75760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612776565b60245481565b600f54601554601b54909192565b60035460009060ff16611336576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b8360001a60f81b6001600160f81b031916611398576040805162461bcd60e51b815260206004820152601960248201527f5465616d206e616d652063616e6e6f7420626520656d70747900000000000000604482015290519081900360640190fd5b6001600160a01b0383166113f3576040805162461bcd60e51b815260206004820152601b60248201527f5465616d20616464726573732063616e6e6f74206265207a65726f0000000000604482015290519081900360640190fd5b6001600160a01b038381166000908152602081905260409020600201541615611463576040805162461bcd60e51b815260206004820152601760248201527f5465616d20616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b600180546040805160c081018252828152602081018881526001600160a01b038881169383019384526060830188815260808401878152600060a08601818152888a018a559089905285517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660068a029081019190915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf786015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8850180546001600160a01b0319169190941617909255517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8201805460ff191691151591909117905591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90920191909155825491929091839081106115cb57fe5b600091825260208083206001600160a01b03808a1685529184905260409093206006909202909201805482556001808201548184015560028083015481850180546001600160a01b031916919096161790945560038083015490840155600480830154908401805460ff909216151560ff199092169190911790556005918201549190920155905461165c91612366565b600255604080518781526001602082015281516001600160a01b0388169285927f443b25596b838f2775d21b1153b87036f08c058fd4702446f1136ab26e5f3b90929081900390910190a350949350505050565b60035460ff16611700576040805162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b604482015290519081900360640190fd5b61170933611129565b6117445760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b6111476127c6565b60035460ff161561179b576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b600354610100900460ff16156117ed576040805162461bcd60e51b815260206004820152601260248201527129bab136b4b9b9b4b7b71034b99037b832b760711b604482015290519081900360640190fd5b600e5460ff161561183a576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b61184333611129565b61187e5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b60215460ff16156118cf576040805162461bcd60e51b815260206004820152601660248201527514985b9ac8185b1c9958591e481c1d589b1a5cda195960521b604482015290519081900360640190fd5b60006002541161191c576040805162461bcd60e51b8152602060048201526013602482015272139bc81d19585b5cc81c9959da5cdd195c9959606a1b604482015290519081900360640190fd5b611924612ec2565b61192c612ec2565b611934612ec2565b61193c612ec2565b60005b600154811015611a27576001818154811061195657fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff16158015608083015260059092015460a08201529550806119ce57508160a001518560a00151105b156119d857611a1f565b8360a001518560a0015111156119f2578493929150611a1f565b8260a001518560a001511115611a0b5784929150611a1f565b8160a001518560a001511115611a1f578491505b60010161193f565b508251600f819055602080850151601055604080860151601180546001600160a01b03199081166001600160a01b0393841617918290556060808a01516012556080808b01516013805460ff1990811692151592909217905560a0808d015160148190558c516015558c8a01516016558c890151601780548816918a169190911790558c8501516018558c8401516019805485169115159190911790558c820151601a558b51601b558b8a0151601c558b890151601d8054909716908916179095558a840151601e558a830151601f805484169115159190911790558a01518855602180549091166001908117909155865198895293909416958701959095528584015292840192909252517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9281900390910190a1601554601754601a54604080519384526001600160a01b0390921660208401528282015260026060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a1601b54601d5460208054604080519485526001600160a01b03909316918401919091528282015260036060830152517f78bd43bbb342abb837e10002dd4fcda5ea371db518ce4e9aff10ab136441a99c9181900360800190a150505050565b611c1b33611129565b611c565760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b610d0181612806565b600e5460ff1690565b600e5460ff16611cb6576040805162461bcd60e51b8152602060048201526014602482015273115d985b1d585d1a5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b611cbf33611129565b611cfa5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612997565b611d0b33611129565b611d465760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b610d0181612709565b60225481565b600e5460ff1615611da2576040805162461bcd60e51b815260206004820152601260248201527122bb30b63ab0ba34b7b71034b99037b832b760711b604482015290519081900360640190fd5b611dab33611129565b611de65760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b6111476129d7565b60035460ff1615611e3d576040805162461bcd60e51b81526020600482015260146024820152732932b3b4b9ba3930ba34b7b71034b99037b832b760611b604482015290519081900360640190fd5b611e4633611129565b611e815760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612a21565b60003411611ec85760405162461bcd60e51b8152600401808060200182810382526021815260200180612ef86021913960400191505060405180910390fd5b604080513481529051429133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a3565b60035460ff1690565b611f1333611129565b611f4e5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b610d0181612a6b565b81611f6181612448565b611fa4576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b82611fae81612602565b611ff6576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600354610100900460ff16612049576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b60006001858154811061205857fe5b60009182526020918290206003600690920201908101869055600281015481546040805189815290519395506001600160a01b039092169390927fa44de9e6ce79675199796005de8516704078af25aaf78ab4be180213882560ee9281900390910190a35050505050565b60006111366005836126a2565b610d0181612ae2565b6120e233611129565b61211d5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b602b5460ff1615612175576040805162461bcd60e51b815260206004820152601860248201527f5072697a657320616c726561647920616c6c6f63617465640000000000000000604482015290519081900360640190fd5b600061218b826121858686612366565b90612366565b9050478111156121cc5760405162461bcd60e51b81526004018080602001828103825260308152602001806131076030913960400191505060405180910390fd5b6040805180820182528581526000602091820181905260258790556026805460ff1990811690915583518085018552878152830182905260278790556028805482169055835180850185528681528301919091526029859055602a805482169055602b805490911660011790558151868152908101859052808201849052426060820152905133917f60e7ffaf15f306ac55b9117669d2fd27994d49f2ccf8490fc874df9ebb5706aa919081900360800190a250505050565b600354610100900460ff166122d8576040805162461bcd60e51b815260206004820152601460248201527314dd589b5a5cdcda5bdb881a5cc818db1bdcd95960621b604482015290519081900360640190fd5b6122e133611129565b61231c5760405162461bcd60e51b8152600401808060200182810382526033815260200180612f666033913960400191505060405180910390fd5b611147612bbd565b61232f6004826123c7565b6040516001600160a01b038216907f37e96fc6762bae414e69ea6e2490e63bc46f2a1335de0f6b91f49cf808829bcf90600090a250565b6000828201838110156123c0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6123d182826126a2565b15612423576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001541190565b6011546000906001600160a01b038381169116148061247b57506017546001600160a01b038381169116145b80611136575050601d546001600160a01b0390811691161490565b806124a081612448565b6124e3576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b816124ed81612602565b15612537576040805162461bcd60e51b81526020600482015260156024820152742a32b0b69034b9903737ba103932b83937bb32b21760591b604482015290519081900360640190fd5b60006001848154811061254657fe5b600091825260209091206004600690920201908101805460ff191660019081179091556002549192506125799190612366565b6002908155810154815460048301546040805160ff90921615158252516001600160a01b03909316927fd903780bcf5bcea81714ac3450a34cb3de7b0735a59883e1eb90edd901a54ad49181900360200190a350505050565b60005b8151811015610d40576125fa8282815181106125ed57fe5b6020026020010151612ae2565b6001016125d5565b600061260d82612448565b61261957506000611139565b60006001838154811061262857fe5b60009182526020918290206040805160c08101825260069093029091018054835260018101549383019390935260028301546001600160a01b03169082015260038201546060820152600482015460ff1615156080820181905260059092015460a090910152915050919050565b600a60ff909116111590565b60006001600160a01b0382166126e95760405162461bcd60e51b81526004018080602001828103825260228152602001806130e56022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61271281612c08565b6001600160a01b03166000908152600d60205260409020600101805460ff60a01b19169055565b61274281612c45565b6001600160a01b0381166000908152600b60205260409020805460ff19169055600a54612770906001612c87565b600a5550565b6003805461ff00191661010090811791829055604080519190920460ff161515815290517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b6003805460ff19169055604080516000815290517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b61280f81612cc9565b6000600c80549050905060006040518060800160405280838152602001846001600160a01b03168152602001600115158152602001600015158152509050600c8190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550505080600d6000856001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050505050565b600e805460ff19169055604080516000815290517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b600e805460ff1916600117908190556040805160ff9290921615158252517f0266365b4830894a247179cbad20f3dfe40ba70917925976027d2af68d950bed9181900360200190a1565b6003805460ff1916600117908190556040805160ff9290921615158252517f78b477400a612eb4ec0a343596323cccfac06b27624264a549d8322c736d055c9181900360200190a1565b612a7481612324565b6009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191682179055600a5461277091612366565b80612aec81612448565b612b2f576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d19585b481a59608a1b604482015290519081900360640190fd5b81612b3981612602565b612b81576040805162461bcd60e51b81526020600482015260146024820152731519585b481a5cc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b600060018481548110612b9057fe5b6000918252602090912060069091020160048101805460ff19169055600254909150612579906001612c87565b6003805461ff001916908190556040805161010090920460ff1615158252517f48fbf5c7b70581e7e2145562de373e14a5af56d09f9b96d73545d0d35f71f0889181900360200190a1565b612c1181612d40565b6001600160a01b0381166000908152600860205260409020805460ff19169055600754612c3f906001612c87565b60075550565b612c50600482612d82565b6040516001600160a01b038216907fc459bd414676a5877fcf10a0d73ecf7e1f672a339650b03e628c4046534300e390600090a250565b60006123c083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612de9565b612cd281612e80565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384169081179091556000908152600860205260409020805460ff191682179055600754612c3f91612366565b612d4b600582612d82565b6040516001600160a01b038216907f32a792a099c63670df7161917c5efb2fdc734cf9f943ebddccbecef87664f2b790600090a250565b612d8c82826126a2565b612dc75760405162461bcd60e51b8152600401808060200182810382526021815260200180612f996021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60008184841115612e785760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e3d578181015183820152602001612e25565b50505050905090810190601f168015612e6a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612e8b6005826123c7565b6040516001600160a01b038216907fe7f15f9ffff540ae14fdebcd9b6d6cc1fc143933338656c99caa595e8b80903990600090a250565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091529056fe6d73672e76616c7565206d757374206265206772656174686572207468616e20304a7564676520616c7265616479207375626d6974746564206576616c756174696f6e4a75646765526f6c653a2063616c6c657220646f6573206e6f742068617665204a7564676520526f6c652e4f7267616e697a6572526f6c653a2063616c6c657220646f6573206e6f742068617665204f7267616e697a657220526f6c652e526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65416464726573732063616e6e6f7420626520657175616c20746f20636f6e7472616374202874686973292061646472657373496e76616c696420616464726573732e204164647265737320636865636b206661696c65642e2053686f756c64206e6f74207265616368207468697320706f696e742e5072697a6520616c7265616479207061696420666f7220666972737420706c6163657465616d7349647320616e642067726164657320646f206e6f74206d617463682074686520636f756e74696e67206f6620617070726f766564207465616d735072697a6520616c7265616479207061696420666f7220746869726420706c6163654c656e677468206f66207465616d7320616e64207465616d47726164657320617272617973206d75737420626520657175616c526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f7420656e6f7567682066756e647320617661696c61626c6520696e206861636b6174686f6e20636f6e74726163745072697a6520616c7265616479207061696420666f72207365636f6e6420706c616365a2646970667358221220e32bda6b0d1a14af7f7e5458be4fececb72320d5bc94fe828921668964ece24964736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "637:5271:4:-:0;;;2554:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2554:305:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;748:30:22;;740:63;;;;;-1:-1:-1;;;740:63:22;;;;;;;;;;;;-1:-1:-1;;;740:63:22;;;;;;;;;;;;;;;813:31;827:16;813:13;:31::i;:::-;-1:-1:-1;2713:5:4;;-1:-1:-1;2719:1:4::1;::::0;-1:-1:-1;2713:8:4::1;;;-1:-1:-1::0;;;;;;2713:13:4::1;2705:38;;;::::0;;-1:-1:-1;;;2705:38:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2705:38:4;;;;;;;;;;;;;::::1;;-1:-1:-1::0;2753:2:4::1;:8:::0;;;;2771:4:::1;:12:::0;2793:11:::1;:26:::0;2829:15:::1;:23:::0;;-1:-1:-1;;2829:23:4::1;::::0;;637:5271;;1682:241:20;1750:28;1770:7;1750:19;;;;;:28;;:::i;:::-;1788:10;:24;;;;;;;;;;;;;-1:-1:-1;;;;;;1788:24:20;-1:-1:-1;;;;;1788:24:20;;;;;;;;-1:-1:-1;1822:25:20;;;:16;1788:24;1822:25;;;;;;;:32;;-1:-1:-1;;1822:32:20;;;;;1888:21;;:28;;:21;;:25;;;;;:28;;:::i;:::-;1864:21;:52;-1:-1:-1;1682:241:20:o;1314:136:22:-;1381:24;1397:7;1381:11;:15;;;;;;:24;;;;:::i;:::-;1420:23;;-1:-1:-1;;;;;1420:23:22;;;;;;;;1314:136;:::o;882:176:24:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:24:o;423:175:23:-;500:18;504:4;510:7;500:3;:18::i;:::-;499:19;491:63;;;;;-1:-1:-1;;;491:63:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;564:20:23;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;564:27:23;-1:-1:-1;564:27:23;;;423:175::o;942:200::-;1014:4;-1:-1:-1;;;;;1038:21:23;;1030:68;;;;-1:-1:-1;;;1030:68:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1115:20:23;:11;:20;;;;;;;;;;;;;;;942:200::o;637:5271:4:-;;;;;;;",
  "deployedSourceMap": "637:5271:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3411:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3411:293:3;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3411:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3411:293:3;;;878:19:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4017:1523;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4017:1523:4;-1:-1:-1;;;;;4017:1523:4;;:::i;:::-;;8420:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8420:83:3;;:::i;8795:98::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8795:98:3;;-1:-1:-1;8795:98:3;-1:-1:-1;8795:98:3;:::i;2743:1555:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2743:1555:1;;-1:-1:-1;2743:1555:1;-1:-1:-1;2743:1555:1;:::i;1152:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:19:3;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1152:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:113:22;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1003:113:22;-1:-1:-1;;;;;1003:113:22;;:::i;:::-;;;;;;;;;;;;;;;;;;1046:73:21;;;;;;;;;;;;;:::i;4144:332:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4144:332:3;-1:-1:-1;;;;;4144:332:3;;:::i;8046:101::-;;;;;;;;;;;;;:::i;1227:81:22:-;;;;;;;;;;;;;:::i;7475:117:1:-;;;;;;;;;;;;;:::i;903:26:4:-;;;;;;;;;;;;;:::i;6323:145:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4859:1108:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4859:1108:3;;;;;;;-1:-1:-1;;;;;4859:1108:3;;;;;;:::i;6599:123:1:-;;;;;;;;;;;;;:::i;4466:1656::-;;;;;;;;;;;;;:::i;1034:100:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1034:100:20;-1:-1:-1;;;;;1034:100:20;;:::i;8296:101:1:-;;;;;;;;;;;;;:::i;7775:102::-;;;;;;;;;;;;;:::i;1140:97:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1140:97:20;-1:-1:-1;;;;;1140:97:20;;:::i;855:17:4:-;;;;;;;;;;;;;:::i;8059:102:1:-;;;;;;;;;;;;;:::i;6852:123::-;;;;;;;;;;;;;:::i;396:183:18:-;;;:::i;7231:105:3:-;;;;;;;;;;;;;:::i;1122:99:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1122:99:22;-1:-1:-1;;;;;1122:99:22;;:::i;6178:343:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6178:343:3;;;;;;;:::i;801:105:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;801:105:21;-1:-1:-1;;;;;801:105:21;;:::i;9164:83:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9164:83:3;;:::i;3246:632:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3246:632:4;;;;;;;;;;;;:::i;7167:117:1:-;;;;;;;;;;;;;:::i;3411:293:3:-;3517:7;3526;3535;3544:4;3550:7;3492:6;2681:21;2695:6;2681:13;:21::i;:::-;2673:49;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;;;;3573:16:::1;3592:5;3598:6;3592:13;;;;;;;;;::::0;;;::::1;::::0;;;;3573:32:::1;::::0;;::::1;::::0;::::1;::::0;;3592:13:::1;::::0;;;::::1;::::0;;::::1;3573:32:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;3573:32:3::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;::::1;;;;::::0;;;;;;::::1;::::0;;::::1;::::0;-1:-1:-1;3573:32:3;;;;;;;;;;-1:-1:-1;3573:32:3;;-1:-1:-1;3573:32:3;;-1:-1:-1;3573:32:3;-1:-1:-1;3573:32:3;-1:-1:-1;;;;3411:293:3:o;878:19:4:-;;;;:::o;4017:1523::-;1701:13:1;;;;1693:48;;;;;-1:-1:-1;;;1693:48:1;;;;;;;;;;;;-1:-1:-1;;;1693:48:1;;;;;;;;;;;;;;;1769:15:4::1;::::0;::::1;;1761:52;;;::::0;;-1:-1:-1;;;1761:52:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4158:13:::0;-1:-1:-1;;;;;2056:21:4;::::2;2048:54;;;::::0;;-1:-1:-1;;;2048:54:4;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;2048:54:4;;;;;;;;;;;;;::::2;;2139:4;-1:-1:-1::0;;;;;2120:24:4;::::2;;;2112:87;;;;-1:-1:-1::0;;;2112:87:4::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4199:13:::3;1905:30;1921:13;1905:15;:30::i;:::-;1897:74;;;::::0;;-1:-1:-1;;;1897:74:4;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;;;;;;;;;;::::3;;4331:22:::0;;4228:19:::4;::::0;;;;;-1:-1:-1;;;;;4314:39:4;;::::4;4331:22:::0;::::4;4314:39;4310:1038;;;-1:-1:-1::0;;4383:22:4;;4428:15:::4;:22:::0;4503:20;;-1:-1:-1;;;;;4383:22:4;;::::4;::::0;-1:-1:-1;4428:22:4;-1:-1:-1;;4503:20:4::4;;4502:21;4494:68;;;;-1:-1:-1::0;;;4494:68:4::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4576:20:::0;:27;;-1:-1:-1;;4576:27:4::4;4599:4;4576:27;::::0;;4310:1038:::4;;;4641:23:::0;;-1:-1:-1;;;;;4624:40:4;;::::4;4641:23:::0;::::4;4624:40;4620:728;;;-1:-1:-1::0;;4694:23:4;;4740:16:::4;:23:::0;4816:21;;-1:-1:-1;;;;;4694:23:4;;::::4;::::0;-1:-1:-1;4740:23:4;4694::::4;::::0;4816:21:::4;;4815:22;4807:70;;;;-1:-1:-1::0;;;4807:70:4::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4891:21:::0;:28;;-1:-1:-1;;4891:28:4::4;4915:4;4891:28;::::0;;4620:728:::4;;;4957:22:::0;;-1:-1:-1;;;;;4940:39:4;;::::4;4957:22:::0;::::4;4940:39;4936:412;;;-1:-1:-1::0;;5009:22:4;;5054:15:::4;:22:::0;5129:20;;-1:-1:-1;;;;;5009:22:4;;::::4;::::0;-1:-1:-1;5054:22:4;5105:1:::4;::::0;5129:20:::4;;5128:21;5120:68;;;;-1:-1:-1::0;;;5120:68:4::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5202:20:::0;:27;;-1:-1:-1;;5202:27:4::4;5225:4;5202:27;::::0;;4936:412:::4;;;5260:77;;-1:-1:-1::0;;;5260:77:4::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4936:412;5363:72;::::0;;;;;::::4;::::0;::::4;;::::0;::::4;::::0;5419:15:::4;5363:72:::0;;;;;;5407:10:::4;::::0;-1:-1:-1;;;;;5363:72:4;::::4;::::0;::::4;::::0;;;;;;;::::4;5496:11;-1:-1:-1::0;;;;;5487:29:4::4;;5524:6;5487:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;1981:1;;;2209::::3;1823::::2;4017:1523:::0;:::o;8420:83:3:-;8476:20;8489:6;8476:12;:20::i;:::-;8420:83;:::o;8795:98::-;8864:22;8878:7;;8864:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8864:13:3;;-1:-1:-1;;;8864:22:3:i;:::-;8795:98;;:::o;2743:1555:1:-;1477:17;;;;1469:50;;;;;-1:-1:-1;;;1469:50:1;;;;;;;;;;;;-1:-1:-1;;;1469:50:1;;;;;;;;;;;;;;;710:19:21::1;718:10;710:7;:19::i;:::-;702:75;;;;-1:-1:-1::0;;;702:75:21::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2908:35:1::0;;::::2;2900:99;;;;-1:-1:-1::0;;;2900:99:1::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3048:18;::::0;3030:36;::::2;3009:146;;;;-1:-1:-1::0;;;3009:146:1::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3194:1;3173:18;;:22;3165:64;;;::::0;;-1:-1:-1;;;3165:64:1;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;3276:10;3239:19;3261:26:::0;;;:14:::2;:26;::::0;;;;3306:11:::2;::::0;::::2;::::0;-1:-1:-1;;;3306:11:1;::::2;;;3305:12;3297:59;;;;-1:-1:-1::0;;;3297:59:1::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3371:9;3366:801;3390:18;;3386:1;:22;3366:801;;;3429:14;3446:7;;3454:1;3446:10;;;;;;;;;;;;;3429:27;;3470:11;3484:10;;3495:1;3484:13;;;;;;;;;;;;;;;3470:27;;3890:21;3904:6;3890:13;:21::i;:::-;3882:49;;;::::0;;-1:-1:-1;;;3882:49:1;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;3882:49:1;;;;;;;;;;;;;::::2;;3953:22;3968:6;3953:14;:22::i;:::-;3945:55;;;::::0;;-1:-1:-1;;;3945:55:1;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;3945:55:1;;;;;;;;;;;;;::::2;;4022:19;4035:5;4022:12;:19::i;:::-;4014:45;;;::::0;;-1:-1:-1;;;4014:45:1;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;4014:45:1;;;;;;;;;;;;;::::2;;4074:17;4094:5;4100:6;4094:13;;;;;;;;;;;;;;;;;;4074:33;;4134:21;4149:5;4134:21;;:4;:10;;;:14;;:21;;;;:::i;:::-;4121:10;::::0;;::::2;:34:::0;-1:-1:-1;;3410:3:1::2;;3366:801;;;-1:-1:-1::0;4232:4:1::2;4218:11:::0;::::2;:18:::0;;-1:-1:-1;;;;4218:18:1::2;-1:-1:-1::0;;;4218:18:1::2;::::0;;;;4262:8;;4251:40:::2;::::0;;-1:-1:-1;;;;;4272:18:1;;::::2;4251:40:::0;;;4262:8;;4251:40:::2;::::0;;;;;::::2;::::0;;::::2;787:1:21;2743:1555:1::0;;;;:::o;1152:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:19:3;;-1:-1:-1;;;;;1152:19:3;;;;;;;;;;:::o;1003:113:22:-;1062:4;1085:24;:11;1101:7;1085:15;:24::i;:::-;1078:31;;1003:113;;;;:::o;1046:73:21:-;1088:24;1101:10;1088:12;:24::i;:::-;1046:73::o;4144:332:3:-;4212:7;;;;;-1:-1:-1;;;;;4272:25:3;;4264:58;;;;;-1:-1:-1;;;4264:58:3;;;;;;;;;;;;-1:-1:-1;;;4264:58:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;4351:26:3;;;4332:16;4351:26;;;;;;;;;;;;4332:45;;;;;;;;;;;-1:-1:-1;4332:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4332:45:3;;;;;;;;;;;;-1:-1:-1;4332:45:3;4144:332::o;8046:101::-;8123:17;;;;;;;;8046:101::o;1227:81:22:-;1273:28;1290:10;1273:16;:28::i;7475:117:1:-;2562:17:3;;;;;;;2561:18;2553:49;;;;;-1:-1:-1;;;2553:49:3;;;;;;;;;;;;-1:-1:-1;;;2553:49:3;;;;;;;;;;;;;;;900:23:22::1;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7562:23:1::2;:21;:23::i;903:26:4:-:0;;;;:::o;6323:145:1:-;6416:10;:13;6431:11;:14;6447:10;:13;6323:145;;;:::o;4859:1108:3:-;2212:19;;5003:7;;2212:19;;2204:54;;;;;-1:-1:-1;;;2204:54:3;;;;;;;;;;;;-1:-1:-1;;;2204:54:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5043:1:3::1;5034:11:::0;;::::1;;;:16;5026:54;;;::::0;;-1:-1:-1;;;5026:54:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;5098:25:3;::::1;5090:65;;;::::0;;-1:-1:-1;;;5090:65:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;5173:26:3;;::::1;5223:1;5173:26:::0;;;::::1;::::0;;;;;;:38:::1;;::::0;::::1;:52:::0;5165:88:::1;;;::::0;;-1:-1:-1;;;5165:88:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5280:5;:12:::0;;5679:58:::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;5679:58:3;;::::1;::::0;;;;;;;;;;;;;;;;;;-1:-1:-1;;5679:58:3;;;;;5747:16;;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5747:16:3::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;-1:-1:-1;;5747:16:3::1;::::0;::::1;;::::0;;;::::1;::::0;;;;;;;;;;;;5802:13;;5280:12;;5679:58;;5280:12;;5802:13;::::1;;;;;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;5773:26:3;;::::1;::::0;;;;;;;;;;5802:13:::1;::::0;;;::::1;::::0;;::::1;5773:42:::0;;;;-1:-1:-1;5773:42:3;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;-1:-1:-1::0;;;;;;5773:42:3;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;5773:42:3::1;;::::0;;::::1;;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;5846:18;;:25:::1;::::0;:22:::1;:25::i;:::-;5825:18;:46:::0;5886:51:::1;::::0;;;;;5932:4:::1;5886:51;::::0;::::1;::::0;;;-1:-1:-1;;;;;5886:51:3;::::1;::::0;5901:6;;5886:51:::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;5954:6:3;4859:1108;-1:-1:-1;;;;4859:1108:3:o;6599:123:1:-;2212:19:3;;;;2204:54;;;;;-1:-1:-1;;;2204:54:3;;;;;;;;;;;;-1:-1:-1;;;2204:54:3;;;;;;;;;;;;;;;900:23:22::1;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6689:26:1::2;:24;:26::i;4466:1656::-:0;2333:19:3;;;;2332:20;2324:53;;;;;-1:-1:-1;;;2324:53:3;;;;;;;;;;;;-1:-1:-1;;;2324:53:3;;;;;;;;;;;;;;;2562:17:::1;::::0;::::1;::::0;::::1;;;2561:18;2553:49;;;::::0;;-1:-1:-1;;;2553:49:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2553:49:3;;;;;;;;;;;;;::::1;;1592:17:1::2;::::0;::::2;;1591:18;1583:49;;;::::0;;-1:-1:-1;;;1583:49:1;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;1583:49:1;;;;;;;;;;;;;::::2;;900:23:22::3;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:13:1::4;::::0;::::4;;1813:14;1805:49;;;::::0;;-1:-1:-1;;;1805:49:1;;::::4;;::::0;::::4;::::0;::::4;::::0;;;;-1:-1:-1;;;1805:49:1;;;;;;;;;;;;;::::4;;4683:1:::5;4662:18;;:22;4654:54;;;::::0;;-1:-1:-1;;;4654:54:1;;::::5;;::::0;::::5;::::0;::::5;::::0;;;;-1:-1:-1;;;4654:54:1;;;;;;;;;;;;;::::5;;4718:19;;:::i;:::-;4747:20;;:::i;:::-;4777:21;;:::i;:::-;4808:20;;:::i;:::-;4844:9;4839:881;4863:5;:12:::0;4859:16;::::5;4839:881;;;4906:5;4912:1;4906:8;;;;;;;;;::::0;;;::::5;::::0;;;;4896:18:::5;::::0;;::::5;::::0;::::5;::::0;;4906:8:::5;::::0;;;::::5;::::0;;::::5;4896:18:::0;;;;::::5;::::0;::::5;::::0;;;::::5;::::0;;;;::::5;::::0;::::5;::::0;-1:-1:-1;;;;;4896:18:1::5;::::0;;;;::::5;::::0;::::5;::::0;;;;;::::5;::::0;::::5;::::0;::::5;;;::::0;::::5;::::0;;;;::::5;::::0;;::::5;::::0;-1:-1:-1;4896:18:1;;;;-1:-1:-1;4896:18:1;4932:51:::5;;;4969:8;:14;;;4953:7;:13;;;:30;4932:51;4928:213;;;5118:8;;4928:213;5341:8;:14;;;5325:7;:13;;;:30;5321:389;;;5462:7:::0;;5425:8;5386:9;-1:-1:-1;5321:389:1::5;;;5510:9;:15;;;5494:7;:13;;;:31;5490:220;;;5595:7:::0;;5556:9;-1:-1:-1;5490:220:1::5;;;5643:8;:14;;;5627:7;:13;;;:30;5623:87;;;5688:7;5677:18;;5623:87;4877:3;;4839:881;;;-1:-1:-1::0;5730:21:1;;:10:::5;:21:::0;;;::::5;::::0;;::::5;::::0;;;::::5;::::0;;::::5;::::0;;;;-1:-1:-1;;;;;;5730:21:1;;::::5;-1:-1:-1::0;;;;;5730:21:1;;::::5;;::::0;;;;::::5;::::0;;::::5;::::0;;;::::5;::::0;;::::5;::::0;;;;-1:-1:-1;;5730:21:1;;::::5;::::0;::::5;;::::0;;;::::5;::::0;;-1:-1:-1;5730:21:1;;::::5;::::0;;;;;5761:23;;:11:::5;:23:::0;;;::::5;::::0;;;;;::::5;::::0;;;;;::::5;::::0;;::::5;::::0;;;::::5;::::0;;;;::::5;::::0;;;;;::::5;::::0;;;;;::::5;::::0;::::5;;::::0;;;::::5;::::0;;;;::::5;::::0;;;5794:21;;:10:::5;:21:::0;;;::::5;::::0;;;;;::::5;::::0;;;;;;::::5;::::0;;::::5;;::::0;;;;;::::5;::::0;;;;;::::5;::::0;;;;;::::5;::::0;::::5;;::::0;;;::::5;::::0;;;::::5;::::0;;;5825:13:::5;:20:::0;;;;::::5;-1:-1:-1::0;5825:20:1;;::::5;::::0;;;5860:74;;;;;5890:22;;;::::5;5860:74:::0;;::::5;::::0;;;;;;;;;;;;;;;;::::5;::::0;;;;;;;;::::5;5964:11;:14:::0;5980:23;;6005:17;;5949:77:::5;::::0;;;;;-1:-1:-1;;;;;5980:23:1;;::::5;5949:77;::::0;::::5;::::0;;;;;5980:23:::5;5949:77:::0;;;;;::::5;::::0;;;;;;;::::5;6056:10;:13:::0;6071:22;;6095:16;;;6041:74:::5;::::0;;;;;-1:-1:-1;;;;;6071:22:1;;::::5;6041:74:::0;;::::5;::::0;;;;;;;;6113:1:::5;6041:74:::0;;;;;::::5;::::0;;;;;;;::::5;1864:1;;;;4466:1656::o:0;1034:100:20:-;900:23:22;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1;;;892:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:18:20::1;1119:7;1109:9;:18::i;8296:101:1:-:0;8373:17;;;;8296:101;:::o;7775:102::-;1477:17;;;;1469:50;;;;;-1:-1:-1;;;1469:50:1;;;;;;;;;;;;-1:-1:-1;;;1469:50:1;;;;;;;;;;;;;;;900:23:22::1;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7852:18:1::2;:16;:18::i;1140:97:20:-:0;900:23:22;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1;;;892:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:21:20::1;1222:7;1209:12;:21::i;855:17:4:-:0;;;;:::o;8059:102:1:-;1592:17;;;;1591:18;1583:49;;;;;-1:-1:-1;;;1583:49:1;;;;;;;;;;;;-1:-1:-1;;;1583:49:1;;;;;;;;;;;;;;;900:23:22::1;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8137:17:1::2;:15;:17::i;6852:123::-:0;2333:19:3;;;;2332:20;2324:53;;;;;-1:-1:-1;;;2324:53:3;;;;;;;;;;;;-1:-1:-1;;;2324:53:3;;;;;;;;;;;;;;;900:23:22::1;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:25:1::2;:23;:25::i;396:183:18:-:0;471:1;459:9;:13;451:59;;;;-1:-1:-1;;;451:59:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:47;;;545:9;525:47;;;;556:15;;533:10;;525:47;;;;;;;;;396:183::o;7231:105:3:-;7310:19;;;;7231:105;:::o;1122:99:22:-;900:23;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1;;;892:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:22:::1;1206:7;1192:13;:22::i;6178:343:3:-:0;6281:6;2681:21;2695:6;2681:13;:21::i;:::-;2673:49;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;;;;6312:6:::1;2804:22;2819:6;2804:14;:22::i;:::-;2796:55;;;::::0;;-1:-1:-1;;;2796:55:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2796:55:3;;;;;;;;;;;;;::::1;;2447:17:::2;::::0;::::2;::::0;::::2;;;2439:50;;;::::0;;-1:-1:-1;;;2439:50:3;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;2439:50:3;;;;;;;;;;;;;::::2;;6359:17:::3;6379:5;6385:6;6379:13;;;;;;;;;::::0;;;::::3;::::0;;;;::::3;::::0;;;::::3;;6402:17;::::0;::::3;:32:::0;;;6478:16:::3;::::0;::::3;::::0;6469:7;;6449:65:::3;::::0;;;;;;;6379:13;;-1:-1:-1;;;;;;6478:16:3;;::::3;::::0;6469:7;;6449:65:::3;::::0;;;;;;;;::::3;2499:1;2732::::1;6178:343:::0;;;:::o;801:105:21:-;856:4;879:20;:7;891;879:11;:20::i;9164:83:3:-;9220:20;9233:6;9220:12;:20::i;3246:632:4:-;900:23:22;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1;;;892:87:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1653:15:4::1;::::0;::::1;;1652:16;1644:53;;;::::0;;-1:-1:-1;;;1644:53:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3413:19:::2;3435:43;3467:10:::0;3435:27:::2;:10:::0;3450:11;3435:14:::2;:27::i;:::-;:31:::0;::::2;:43::i;:::-;3413:65;;3511:21;3496:11;:36;;3488:97;;;;-1:-1:-1::0;;;3488:97:4::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3613:24;::::0;;;;::::2;::::0;;;;;-1:-1:-1;3613:24:4::2;::::0;;::::2;::::0;;;3595:15:::2;:42:::0;;;;;;-1:-1:-1;;3595:42:4;;::::2;::::0;;;3666:25;;;;::::2;::::0;;;;;;::::2;::::0;;;3647:16:::2;:44:::0;;;;;;;::::2;::::0;;3719:24;;;;::::2;::::0;;;;;;::::2;::::0;;;;3701:15:::2;:42:::0;;;;;;;::::2;::::0;;3753:15:::2;:22:::0;;;;::::2;3613:24:::0;3753:22:::2;::::0;;3790:81;;;;;;;::::2;::::0;;;;;;;;;3855:15:::2;3790:81:::0;;;;;;3843:10:::2;::::0;3790:81:::2;::::0;;;;;;;;::::2;1707:1;3246:632:::0;;;:::o;7167:117:1:-;2447:17:3;;;;;;;2439:50;;;;;-1:-1:-1;;;2439:50:3;;;;;;;;;;;;-1:-1:-1;;;2439:50:3;;;;;;;;;;;;;;;900:23:22::1;912:10;900:11;:23::i;:::-;892:87;;;;-1:-1:-1::0;;;892:87:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7253:24:1::2;:22;:24::i;1314:136:22:-:0;1381:24;:11;1397:7;1381:15;:24::i;:::-;1420:23;;-1:-1:-1;;;;;1420:23:22;;;;;;;;1314:136;:::o;882:176:24:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:24:o;423:175:23:-;500:18;504:4;510:7;500:3;:18::i;:::-;499:19;491:63;;;;;-1:-1:-1;;;491:63:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;564:20:23;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;564:27:23;-1:-1:-1;564:27:23;;;423:175::o;10872:115:3:-;10967:5;:12;-1:-1:-1;10958:21:3;10872:115::o;5624:282:4:-;5748:22;;5694:4;;-1:-1:-1;;;;;5731:39:4;;;5748:22;;5731:39;;:99;;-1:-1:-1;5807:23:4;;-1:-1:-1;;;;;5790:40:4;;;5807:23;;5790:40;5731:99;:158;;;-1:-1:-1;;5867:22:4;;-1:-1:-1;;;;;5850:39:4;;;5867:22;;5850:39;;5624:282::o;9977:300:3:-;10036:6;2681:21;2695:6;2681:13;:21::i;:::-;2673:49;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;;;;10059:6:::1;2934:22;2949:6;2934:14;:22::i;:::-;2933:23;2925:57;;;::::0;;-1:-1:-1;;;2925:57:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2925:57:3;;;;;;;;;;;;;::::1;;10077:17:::2;10097:5;10103:6;10097:13;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;10120;::::0;::::2;:20:::0;;10136:4:::2;-1:-1:-1::0;;10120:20:3;;::::2;::::0;::::2;::::0;;;10171:18:::2;::::0;10097:13;;-1:-1:-1;10171:25:3::2;::::0;:18;:22:::2;:25::i;:::-;10150:18;:46:::0;;;10238:16;::::2;::::0;10229:7;;10256:13:::2;::::0;::::2;::::0;10211:59:::2;::::0;;10256:13:::2;::::0;;::::2;10211:59;;::::0;;;-1:-1:-1;;;;;10238:16:3;;::::2;::::0;10211:59:::2;::::0;;;;::::2;::::0;;::::2;2992:1;2732::::1;9977:300:::0;;:::o;10319:168::-;10392:9;10387:94;10411:7;:14;10407:1;:18;10387:94;;;10446:24;10459:7;10467:1;10459:10;;;;;;;;;;;;;;10446:12;:24::i;:::-;10427:3;;10387:94;;11029:223;11092:4;11113:21;11127:6;11113:13;:21::i;:::-;11108:65;;-1:-1:-1;11157:5:3;11150:12;;11108:65;11183:16;11202:5;11208:6;11202:13;;;;;;;;;;;;;;;;;11183:32;;;;;;;;11202:13;;;;;;;;11183:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11183:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11183:32:3;;;;;11029:223;-1:-1:-1;;;11029:223:3:o;9940:115:1:-;10045:2;10036:11;;;;;;;9940:115::o;942:200:23:-;1014:4;-1:-1:-1;;;;;1038:21:23;;1030:68;;;;-1:-1:-1;;;1030:68:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1115:20:23;:11;:20;;;;;;;;;;;;;;;942:200::o;9515:243:1:-;9582:27;9601:7;9582:18;:27::i;:::-;-1:-1:-1;;;;;9641:23:1;9619:19;9641:23;;;:14;:23;;;;;-1:-1:-1;9674:12:1;:20;;-1:-1:-1;;;;9674:20:1;;;9515:243::o;1929:214:20:-;2000:31;2023:7;2000:22;:31::i;:::-;-1:-1:-1;;;;;2041:25:20;;2069:5;2041:25;;;:16;:25;;;;;:33;;-1:-1:-1;;2041:33:20;;;2108:21;;:28;;-1:-1:-1;2108:25:20;:28::i;:::-;2084:21;:52;-1:-1:-1;1929:214:20:o;9801:134:3:-;9847:17;:24;;-1:-1:-1;;9847:24:3;;;;;;;;;9886:42;;;9910:17;;;;9847:24;9910:17;9886:42;;;;;;;;;;;;;;;9801:134::o;9289:144::-;9338:19;:27;;-1:-1:-1;;9338:27:3;;;9380:46;;;9360:5;9380:46;;;;;;;;;;;;;9289:144::o;8915:481:1:-;9127:24;9143:7;9127:15;:24::i;:::-;9161:13;9177:10;:17;;;;9161:33;;9204:18;9225:34;;;;;;;;9231:5;9225:34;;;;9238:7;-1:-1:-1;;;;;9225:34:1;;;;;9247:4;9225:34;;;;;;9253:5;9225:34;;;;;9204:55;;9269:10;9285:5;9269:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9269:22:1;;;;;-1:-1:-1;;;;;9269:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9327:5;9301:14;:23;9316:7;-1:-1:-1;;;;;9301:23:1;-1:-1:-1;;;;;9301:23:1;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9301:31:1;;;;;-1:-1:-1;;;;;9301:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8915:481;;;:::o;8462:136::-;8509:17;:25;;-1:-1:-1;;8509:25:1;;;8549:42;;;8529:5;8549:42;;;;;;;;;;;;;8462:136::o;8662:134::-;8708:17;:24;;-1:-1:-1;;8708:24:1;8728:4;8708:24;;;;;8747:42;;;8708:24;8771:17;;;;8747:42;;;;;;;;;;;;;;8662:134::o;9475:142:3:-;9523:19;:26;;-1:-1:-1;;9523:26:3;9545:4;9523:26;;;;;9564:46;;;9523:26;9590:19;;;;9564:46;;;;;;;;;;;;;;9475:142::o;1682:241:20:-;1750:28;1770:7;1750:19;:28::i;:::-;1788:10;:24;;;;;;;;;;;;;-1:-1:-1;;;;;;1788:24:20;-1:-1:-1;;;;;1788:24:20;;;;;;;;-1:-1:-1;1822:25:20;;;:16;1788:24;1822:25;;;;:32;;-1:-1:-1;;1822:32:20;;;;;1888:21;;:28;;:25;:28::i;10529:301:3:-;10588:6;2681:21;2695:6;2681:13;:21::i;:::-;2673:49;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;-1:-1:-1;;;2673:49:3;;;;;;;;;;;;;;;10611:6:::1;2804:22;2819:6;2804:14;:22::i;:::-;2796:55;;;::::0;;-1:-1:-1;;;2796:55:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2796:55:3;;;;;;;;;;;;;::::1;;10629:17:::2;10649:5;10655:6;10649:13;;;;;;;;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;10672;::::0;::::2;:21:::0;;-1:-1:-1;;10672:21:3::2;::::0;;10724:18:::2;::::0;10649:13;;-1:-1:-1;10724:25:3::2;::::0;-1:-1:-1;10724:22:3::2;:25::i;9623:136::-:0;9670:17;:25;;-1:-1:-1;;9670:25:3;;;;;9710:42;;;9670:25;9734:17;;;9670:25;9734:17;9710:42;;;;;;;;;;;;;;9623:136::o;1474:202:20:-;1549:27;1568:7;1549:18;:27::i;:::-;-1:-1:-1;;;;;1586:21:20;;1610:5;1586:21;;;:12;:21;;;;;:29;;-1:-1:-1;;1586:29:20;;;1645:17;;:24;;-1:-1:-1;1645:21:20;:24::i;:::-;1625:17;:44;-1:-1:-1;1474:202:20:o;1456:144:22:-;1526:27;:11;1545:7;1526:18;:27::i;:::-;1568:25;;-1:-1:-1;;;;;1568:25:22;;;;;;;;1456:144;:::o;1329:134:24:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;1243:225:20:-;1315:24;1331:7;1315:15;:24::i;:::-;1349:6;:20;;;;;;;;;;;;;-1:-1:-1;;;;;;1349:20:20;-1:-1:-1;;;;;1349:20:20;;;;;;;;-1:-1:-1;1379:21:20;;;:12;1349:20;1379:21;;;;:28;;-1:-1:-1;;1379:28:20;;;;;1437:17;;:24;;:21;:24::i;1255:132:21:-;1321:23;:7;1336;1321:14;:23::i;:::-;1359:21;;-1:-1:-1;;;;;1359:21:21;;;;;;;;1255:132;:::o;673:180:23:-;752:18;756:4;762:7;752:3;:18::i;:::-;744:64;;;;-1:-1:-1;;;744:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;818:20:23;841:5;818:20;;;;;;;;;;;:28;;-1:-1:-1;;818:28:23;;;673:180::o;1754:187:24:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:24;;;1754:187::o;1125:124:21:-;1188:20;:7;1200;1188:11;:20::i;:::-;1223:19;;-1:-1:-1;;;;;1223:19:21;;;;;;;;1125:124;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity >=0.7.0 <0.8.0;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\nimport \"./ContestBracketRegistry.sol\";\nimport \"../payment/Payable.sol\";\n\n/**\n    @notice Represents a hackathon contest, where organizers can control the\n    stages/phases of the contest (such as registration, submission, evaluation and results)\n    as well as pay prizes to the winners.\n    @dev For the payment functionality, the \"withdraw pattern\" is being implemented for this contract.\n    The ledger allocation is done is the method {allocatePrize} and the withdraw is implemented on {withdrawPrize}.\n */\ncontract Hackathon is Payable, ContestBracketRegistry {\n    using SafeMath for uint256;\n\n    /// @dev Represents a prize to be paid to a winner.\n    struct Prize {\n        uint256 amount;\n        bool paid;\n    }\n\n    uint256 public id;\n    bytes32 public name;\n    bytes32 public description;\n    Prize internal firstPlacePrize;\n    Prize internal secondPlacePrize;\n    Prize internal thirdPlacePrize;\n    bool internal prizesAllocated;\n\n    /// @dev emitted when the prize allocation is performed. This may be used to alert winners that their prizes are available to withdraw.\n    event PrizeAllocation(\n        uint256 firstPlacePrize,\n        uint256 secondPlacePrize,\n        uint256 thirdPlacePrize,\n        address indexed organizer,\n        uint256 datetime\n    );\n\n    /// @dev emitted when a prize is withdraw by a winner team.\n    event Withdraw(address indexed to, uint256 amount, uint8 rankPosition, address indexed requester, uint256 datetime);\n\n    modifier whenPrizeNotAllocated() {\n        require(!prizesAllocated, \"Prizes already allocated\");\n        _;\n    }\n\n    modifier whenPrizeAllocated() {\n        require(prizesAllocated, \"Prizes not allocated yet\");\n        _;\n    }\n\n    modifier onlyWinnerAddress(address winnerAddress) {\n        require(isWinnerAddress(winnerAddress), \"Account address is not a winner\");\n        _;\n    }\n\n    modifier onlyValidAddress(address account) {\n        require(account != address(0), \"Invalid zero address\");\n        require(account != address(this), \"Address cannot be equal to contract (this) address\");\n        _;\n    }\n\n    /**\n        @notice Creates a new Hackathon contract with a specific _id, _name, desciption,\n        and a specific organizer.\n        @param _id {uint256} Hackathon's unique indentifier\n        @param _name {bytes32} Hackathon's name. Required.\n        @param _description {bytes32} Hackathon's description. Optional.\n     */\n    constructor(uint256 _id, bytes32 _name, bytes32 _description, address initialOrganizer)\n        ContestBracketRegistry(initialOrganizer)\n    {\n        require(_name[0] != 0, \"Invalid name\");\n        id = _id;\n        name = _name;\n        description = _description;\n        prizesAllocated = false;\n    }\n\n    /**\n        @notice Allows the organizer to allocate funds that's going to be distributed to winners.\n        @dev It does not associate the prize with a specific account, since prizes cound be associated any moment\n        by the organizers, as long as prizes were not allocated before.\n        The contract needs to have enought balance to allocate funds to winners.\n     */\n    function allocatePrize(uint256 firstPrize, uint256 secondPrize, uint256 thirdPrize)\n        external\n        onlyOrganizer\n        whenPrizeNotAllocated\n    {\n        uint256 totalPrizes = firstPrize.add(secondPrize).add(thirdPrize);\n        require(totalPrizes <= address(this).balance, \"Not enough funds available in hackathon contract\");\n        firstPlacePrize = Prize(firstPrize, false);\n        secondPlacePrize = Prize(secondPrize, false);\n        thirdPlacePrize = Prize(thirdPrize, false);\n        prizesAllocated = true;\n        emit PrizeAllocation(firstPrize, secondPrize, thirdPrize, msg.sender, block.timestamp);\n    }\n\n    /**\n        @notice Allows withdrawing prizes to winners.\n        @dev Winners must implement IPayable to receive funds.\n     */\n    function withdrawPrize(address winnerAddress)\n        external\n        whenRankPublished\n        whenPrizeAllocated\n        onlyValidAddress(winnerAddress)\n        onlyWinnerAddress(winnerAddress)\n    {\n        address teamAddress;\n        uint256 amount;\n        uint8 rankPosition;\n\n        if (winnerAddress == firstPlace.teamAddress) {\n            teamAddress = firstPlace.teamAddress;\n            amount = firstPlacePrize.amount;\n            rankPosition = 1;\n            require(!firstPlacePrize.paid, \"Prize already paid for first place\");\n            firstPlacePrize.paid = true;\n        } else if (winnerAddress == secondPlace.teamAddress) {\n            teamAddress = secondPlace.teamAddress;\n            amount = secondPlacePrize.amount;\n            rankPosition = 2;\n            require(!secondPlacePrize.paid, \"Prize already paid for second place\");\n            secondPlacePrize.paid = true;\n        } else if (winnerAddress == thirdPlace.teamAddress) {\n            teamAddress = thirdPlace.teamAddress;\n            amount = thirdPlacePrize.amount;\n            rankPosition = 3;\n            require(!thirdPlacePrize.paid, \"Prize already paid for third place\");\n            thirdPlacePrize.paid = true;\n        } else {\n            revert(\"Invalid address. Address check failed. Should not reach this point.\");\n        }\n\n        emit Withdraw(teamAddress, amount, rankPosition, msg.sender, block.timestamp);\n        // Pays winner using team addres.\n        IPayable(teamAddress).deposit{value: amount}();\n    }\n\n    /**\n        Checks if the specifier address is one of the winners\n    */\n\n    function isWinnerAddress(address winnerAddress) private view returns (bool) {\n        return (\n            winnerAddress == firstPlace.teamAddress ||\n                winnerAddress == secondPlace.teamAddress ||\n                winnerAddress == thirdPlace.teamAddress\n        );\n    }\n}\n",
  "sourcePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol",
  "ast": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol",
    "exportedSymbols": {
      "ContestBracketRegistry": [674],
      "ContestRoleManager": [3326],
      "ContestTeamRegistry": [1772],
      "Hackathon": [2174],
      "IPayable": [2987],
      "JudgeRole": [3416],
      "OrganizerRole": [3532],
      "Payable": [3026],
      "Roles": [3618],
      "SafeMath": [3814]
    },
    "id": 2175,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1774,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "40:31:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1775,
        "nodeType": "ImportDirective",
        "scope": 2175,
        "sourceUnit": 3815,
        "src": "73:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol",
        "file": "./ContestBracketRegistry.sol",
        "id": 1776,
        "nodeType": "ImportDirective",
        "scope": 2175,
        "sourceUnit": 675,
        "src": "126:38:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/Payable.sol",
        "file": "../payment/Payable.sol",
        "id": 1777,
        "nodeType": "ImportDirective",
        "scope": 2175,
        "sourceUnit": 3027,
        "src": "165:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1779,
              "name": "Payable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3026,
              "src": "659:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Payable_$3026",
                "typeString": "contract Payable"
              }
            },
            "id": 1780,
            "nodeType": "InheritanceSpecifier",
            "src": "659:7:4"
          },
          {
            "baseName": {
              "id": 1781,
              "name": "ContestBracketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 674,
              "src": "668:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestBracketRegistry_$674",
                "typeString": "contract ContestBracketRegistry"
              }
            },
            "id": 1782,
            "nodeType": "InheritanceSpecifier",
            "src": "668:22:4"
          }
        ],
        "contractDependencies": [674, 1772, 2987, 3026, 3326, 3416, 3532],
        "contractKind": "contract",
        "documentation": {
          "id": 1778,
          "nodeType": "StructuredDocumentation",
          "src": "199:437:4",
          "text": "@notice Represents a hackathon contest, where organizers can control the\nstages/phases of the contest (such as registration, submission, evaluation and results)\nas well as pay prizes to the winners.\n@dev For the payment functionality, the \"withdraw pattern\" is being implemented for this contract.\nThe ledger allocation is done is the method {allocatePrize} and the withdraw is implemented on {withdrawPrize}."
        },
        "fullyImplemented": true,
        "id": 2174,
        "linearizedBaseContracts": [2174, 674, 3326, 3416, 3532, 1772, 3026, 2987],
        "name": "Hackathon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1785,
            "libraryName": {
              "id": 1783,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3814,
              "src": "703:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3814",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "697:27:4",
            "typeName": {
              "id": 1784,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "716:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Hackathon.Prize",
            "id": 1790,
            "members": [
              {
                "constant": false,
                "id": 1787,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 1790,
                "src": "809:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1786,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1789,
                "mutability": "mutable",
                "name": "paid",
                "nodeType": "VariableDeclaration",
                "scope": 1790,
                "src": "833:9:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1788,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prize",
            "nodeType": "StructDefinition",
            "scope": 2174,
            "src": "786:63:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af640d0f",
            "id": 1792,
            "mutability": "mutable",
            "name": "id",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "855:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1791,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1794,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "878:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1793,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "878:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7284e416",
            "id": 1796,
            "mutability": "mutable",
            "name": "description",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "903:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1795,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1798,
            "mutability": "mutable",
            "name": "firstPlacePrize",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "935:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Prize_$1790_storage",
              "typeString": "struct Hackathon.Prize"
            },
            "typeName": {
              "id": 1797,
              "name": "Prize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "935:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Prize_$1790_storage_ptr",
                "typeString": "struct Hackathon.Prize"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1800,
            "mutability": "mutable",
            "name": "secondPlacePrize",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "971:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Prize_$1790_storage",
              "typeString": "struct Hackathon.Prize"
            },
            "typeName": {
              "id": 1799,
              "name": "Prize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "971:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Prize_$1790_storage_ptr",
                "typeString": "struct Hackathon.Prize"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1802,
            "mutability": "mutable",
            "name": "thirdPlacePrize",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "1008:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Prize_$1790_storage",
              "typeString": "struct Hackathon.Prize"
            },
            "typeName": {
              "id": 1801,
              "name": "Prize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "1008:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Prize_$1790_storage_ptr",
                "typeString": "struct Hackathon.Prize"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1804,
            "mutability": "mutable",
            "name": "prizesAllocated",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "1044:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1803,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1044:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "1080:135:4",
              "text": "@dev emitted when the prize allocation is performed. This may be used to alert winners that their prizes are available to withdraw."
            },
            "id": 1817,
            "name": "PrizeAllocation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstPlacePrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1251:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "secondPlacePrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1284:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thirdPlacePrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1318:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1813,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "organizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1351:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "datetime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1386:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:167:4"
            },
            "src": "1220:189:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1818,
              "nodeType": "StructuredDocumentation",
              "src": "1415:59:4",
              "text": "@dev emitted when a prize is withdraw by a winner team."
            },
            "id": 1830,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1820,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1494:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1514:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rankPosition",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1530:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requester",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1550:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1828,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "datetime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1577:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:101:4"
            },
            "src": "1479:116:4"
          },
          {
            "body": {
              "id": 1839,
              "nodeType": "Block",
              "src": "1634:81:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1652:16:4",
                        "subExpression": {
                          "id": 1833,
                          "name": "prizesAllocated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "1653:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072697a657320616c726561647920616c6c6f6361746564",
                        "id": 1835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1670:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf96c3e55398b1e61a28ff861bf1a69cf40f8effec6e352b73c139e92b58147e",
                          "typeString": "literal_string \"Prizes already allocated\""
                        },
                        "value": "Prizes already allocated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf96c3e55398b1e61a28ff861bf1a69cf40f8effec6e352b73c139e92b58147e",
                          "typeString": "literal_string \"Prizes already allocated\""
                        }
                      ],
                      "id": 1832,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1644:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1837,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:53:4"
                },
                {
                  "id": 1838,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:4"
                }
              ]
            },
            "id": 1840,
            "name": "whenPrizeNotAllocated",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1631:2:4"
            },
            "src": "1601:114:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "1751:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1843,
                        "name": "prizesAllocated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "1769:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072697a6573206e6f7420616c6c6f636174656420796574",
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1786:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc7e4d62b3e9c65907c4925855d5646179a53c0fb400b0698f5dbbb3d0773704",
                          "typeString": "literal_string \"Prizes not allocated yet\""
                        },
                        "value": "Prizes not allocated yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc7e4d62b3e9c65907c4925855d5646179a53c0fb400b0698f5dbbb3d0773704",
                          "typeString": "literal_string \"Prizes not allocated yet\""
                        }
                      ],
                      "id": 1842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1761:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:52:4"
                },
                {
                  "id": 1847,
                  "nodeType": "PlaceholderStatement",
                  "src": "1823:1:4"
                }
              ]
            },
            "id": 1849,
            "name": "whenPrizeAllocated",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:2:4"
            },
            "src": "1721:110:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "1887:102:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1855,
                            "name": "winnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1851,
                            "src": "1921:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1854,
                          "name": "isWinnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2173,
                          "src": "1905:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:30:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e742061646472657373206973206e6f7420612077696e6e6572",
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1937:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97b31c34870bc516686cd656eda50f3a0b810bd21d94f28d52affe849bf23342",
                          "typeString": "literal_string \"Account address is not a winner\""
                        },
                        "value": "Account address is not a winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97b31c34870bc516686cd656eda50f3a0b810bd21d94f28d52affe849bf23342",
                          "typeString": "literal_string \"Account address is not a winner\""
                        }
                      ],
                      "id": 1853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1897:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:74:4"
                },
                {
                  "id": 1860,
                  "nodeType": "PlaceholderStatement",
                  "src": "1981:1:4"
                }
              ]
            },
            "id": 1862,
            "name": "onlyWinnerAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "1864:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1863:23:4"
            },
            "src": "1837:152:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1887,
              "nodeType": "Block",
              "src": "2038:179:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1867,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "2056:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2075:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2067:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1868,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2067:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2067:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2056:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207a65726f2061646472657373",
                        "id": 1873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2079:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff7cda39684c4fc70305248b0bb03dec7a83a7c720aedf63600d835df66b7c7",
                          "typeString": "literal_string \"Invalid zero address\""
                        },
                        "value": "Invalid zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff7cda39684c4fc70305248b0bb03dec7a83a7c720aedf63600d835df66b7c7",
                          "typeString": "literal_string \"Invalid zero address\""
                        }
                      ],
                      "id": 1866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2048:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1875,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1877,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "2120:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1880,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2139:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon_$2174",
                                "typeString": "contract Hackathon"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Hackathon_$2174",
                                "typeString": "contract Hackathon"
                              }
                            ],
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2131:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1878,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2131:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2131:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2120:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573732063616e6e6f7420626520657175616c20746f20636f6e7472616374202874686973292061646472657373",
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2146:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83cda136770e17f6f31be761df65fed1b68fd4b5f98b2d3b5153d11abf7a1099",
                          "typeString": "literal_string \"Address cannot be equal to contract (this) address\""
                        },
                        "value": "Address cannot be equal to contract (this) address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83cda136770e17f6f31be761df65fed1b68fd4b5f98b2d3b5153d11abf7a1099",
                          "typeString": "literal_string \"Address cannot be equal to contract (this) address\""
                        }
                      ],
                      "id": 1876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2112:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:87:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1885,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:87:4"
                },
                {
                  "id": 1886,
                  "nodeType": "PlaceholderStatement",
                  "src": "2209:1:4"
                }
              ]
            },
            "id": 1888,
            "name": "onlyValidAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "2021:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:17:4"
            },
            "src": "1995:222:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "2695:164:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1904,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1893,
                            "src": "2713:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1906,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2719:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2713:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2725:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2713:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e616d65",
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2728:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19bb2f3dcef9fe4d075b4ea12031255ac5db5257bcefc4252f155c870adc52ea",
                          "typeString": "literal_string \"Invalid name\""
                        },
                        "value": "Invalid name"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19bb2f3dcef9fe4d075b4ea12031255ac5db5257bcefc4252f155c870adc52ea",
                          "typeString": "literal_string \"Invalid name\""
                        }
                      ],
                      "id": 1903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2705:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:38:4"
                },
                {
                  "expression": {
                    "id": 1914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1912,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1792,
                      "src": "2753:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1913,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "2758:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2753:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1915,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:8:4"
                },
                {
                  "expression": {
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1916,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1794,
                      "src": "2771:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1917,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1893,
                      "src": "2778:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2771:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:12:4"
                },
                {
                  "expression": {
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1920,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1796,
                      "src": "2793:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1921,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "2807:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2793:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:26:4"
                },
                {
                  "expression": {
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1924,
                      "name": "prizesAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "2829:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2847:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2829:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:23:4"
                }
              ]
            },
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "2223:326:4",
              "text": "@notice Creates a new Hackathon contract with a specific _id, _name, desciption,\nand a specific organizer.\n@param _id {uint256} Hackathon's unique indentifier\n@param _name {bytes32} Hackathon's name. Required.\n@param _description {bytes32} Hackathon's description. Optional."
            },
            "id": 1929,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1900,
                    "name": "initialOrganizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1897,
                    "src": "2673:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1901,
                "modifierName": {
                  "id": 1899,
                  "name": "ContestBracketRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 674,
                  "src": "2650:22:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestBracketRegistry_$674_$",
                    "typeString": "type(contract ContestBracketRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2650:40:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2566:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2579:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2579:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2594:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1897,
                  "mutability": "mutable",
                  "name": "initialOrganizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2616:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:76:4"
            },
            "returnParameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:0:4"
            },
            "scope": 2174,
            "src": "2554:305:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1999,
              "nodeType": "Block",
              "src": "3403:475:4",
              "statements": [
                {
                  "assignments": [1944],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1944,
                      "mutability": "mutable",
                      "name": "totalPrizes",
                      "nodeType": "VariableDeclaration",
                      "scope": 1999,
                      "src": "3413:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3413:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1952,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1950,
                        "name": "thirdPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "3467:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1947,
                            "name": "secondPrize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "3450:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1945,
                            "name": "firstPrize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "3435:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3647,
                          "src": "3435:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3435:27:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3647,
                      "src": "3435:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3413:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1954,
                          "name": "totalPrizes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1944,
                          "src": "3496:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1957,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3519:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon_$2174",
                                  "typeString": "contract Hackathon"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Hackathon_$2174",
                                  "typeString": "contract Hackathon"
                                }
                              ],
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3511:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3511:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3511:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3511:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3496:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320617661696c61626c6520696e206861636b6174686f6e20636f6e7472616374",
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3534:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a246f0e358a4bd74091742f06fd7de38f1bdc745c64b8ecee65bb0cdd6477163",
                          "typeString": "literal_string \"Not enough funds available in hackathon contract\""
                        },
                        "value": "Not enough funds available in hackathon contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a246f0e358a4bd74091742f06fd7de38f1bdc745c64b8ecee65bb0cdd6477163",
                          "typeString": "literal_string \"Not enough funds available in hackathon contract\""
                        }
                      ],
                      "id": 1953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3488:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1963,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:97:4"
                },
                {
                  "expression": {
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1964,
                      "name": "firstPlacePrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1798,
                      "src": "3595:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                        "typeString": "struct Hackathon.Prize storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1966,
                          "name": "firstPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "3619:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3631:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1965,
                        "name": "Prize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "3613:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prize_$1790_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Prize storage pointer)"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3613:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_memory_ptr",
                        "typeString": "struct Hackathon.Prize memory"
                      }
                    },
                    "src": "3595:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                      "typeString": "struct Hackathon.Prize storage ref"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:42:4"
                },
                {
                  "expression": {
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1971,
                      "name": "secondPlacePrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "3647:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                        "typeString": "struct Hackathon.Prize storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1973,
                          "name": "secondPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1934,
                          "src": "3672:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3685:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1972,
                        "name": "Prize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "3666:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prize_$1790_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Prize storage pointer)"
                        }
                      },
                      "id": 1975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3666:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_memory_ptr",
                        "typeString": "struct Hackathon.Prize memory"
                      }
                    },
                    "src": "3647:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                      "typeString": "struct Hackathon.Prize storage ref"
                    }
                  },
                  "id": 1977,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:44:4"
                },
                {
                  "expression": {
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1978,
                      "name": "thirdPlacePrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "3701:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                        "typeString": "struct Hackathon.Prize storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1980,
                          "name": "thirdPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1936,
                          "src": "3725:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3737:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1979,
                        "name": "Prize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "3719:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prize_$1790_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Prize storage pointer)"
                        }
                      },
                      "id": 1982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3719:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_memory_ptr",
                        "typeString": "struct Hackathon.Prize memory"
                      }
                    },
                    "src": "3701:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                      "typeString": "struct Hackathon.Prize storage ref"
                    }
                  },
                  "id": 1984,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:42:4"
                },
                {
                  "expression": {
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1985,
                      "name": "prizesAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "3753:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3771:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3753:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "3753:22:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1990,
                        "name": "firstPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "3806:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1991,
                        "name": "secondPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "3818:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1992,
                        "name": "thirdPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "3831:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1993,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3843:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3843:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1995,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3855:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3855:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1989,
                      "name": "PrizeAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "3790:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "EmitStatement",
                  "src": "3785:86:4"
                }
              ]
            },
            "documentation": {
              "id": 1930,
              "nodeType": "StructuredDocumentation",
              "src": "2865:376:4",
              "text": "@notice Allows the organizer to allocate funds that's going to be distributed to winners.\n@dev It does not associate the prize with a specific account, since prizes cound be associated any moment\nby the organizers, as long as prizes were not allocated before.\nThe contract needs to have enought balance to allocate funds to winners."
            },
            "functionSelector": "f59ec3f9",
            "id": 2000,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1939,
                "modifierName": {
                  "id": 1938,
                  "name": "onlyOrganizer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3465,
                  "src": "3355:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3355:13:4"
              },
              {
                "id": 1941,
                "modifierName": {
                  "id": 1940,
                  "name": "whenPrizeNotAllocated",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1840,
                  "src": "3377:21:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3377:21:4"
              }
            ],
            "name": "allocatePrize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "firstPrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2000,
                  "src": "3269:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "secondPrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2000,
                  "src": "3289:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1936,
                  "mutability": "mutable",
                  "name": "thirdPrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2000,
                  "src": "3310:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3268:61:4"
            },
            "returnParameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3403:0:4"
            },
            "scope": 2174,
            "src": "3246:632:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2147,
              "nodeType": "Block",
              "src": "4218:1322:4",
              "statements": [
                {
                  "assignments": [2017],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "mutability": "mutable",
                      "name": "teamAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2147,
                      "src": "4228:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2016,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4228:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2018,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4228:19:4"
                },
                {
                  "assignments": [2020],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2020,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2147,
                      "src": "4257:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4257:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2021,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4257:14:4"
                },
                {
                  "assignments": [2023],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2023,
                      "mutability": "mutable",
                      "name": "rankPosition",
                      "nodeType": "VariableDeclaration",
                      "scope": 2147,
                      "src": "4281:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2022,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4281:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4281:18:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2025,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2003,
                      "src": "4314:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2026,
                        "name": "firstPlace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "4331:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$1134_storage",
                          "typeString": "struct ContestTeamRegistry.Team storage ref"
                        }
                      },
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "teamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1127,
                      "src": "4331:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4314:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2057,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "4624:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 2058,
                          "name": "secondPlace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "4641:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$1134_storage",
                            "typeString": "struct ContestTeamRegistry.Team storage ref"
                          }
                        },
                        "id": 2059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "teamAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1127,
                        "src": "4641:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4624:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2089,
                          "name": "winnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2003,
                          "src": "4940:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2090,
                            "name": "thirdPlace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "4957:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$1134_storage",
                              "typeString": "struct ContestTeamRegistry.Team storage ref"
                            }
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1127,
                          "src": "4957:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4940:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2125,
                        "nodeType": "Block",
                        "src": "5246:102:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "496e76616c696420616464726573732e204164647265737320636865636b206661696c65642e2053686f756c64206e6f74207265616368207468697320706f696e742e",
                                  "id": 2122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5267:69:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_84888db729f17b29a04acf7a945371d331f5f1de409134c2c957ac7cd7c45cc0",
                                    "typeString": "literal_string \"Invalid address. Address check failed. Should not reach this point.\""
                                  },
                                  "value": "Invalid address. Address check failed. Should not reach this point."
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_84888db729f17b29a04acf7a945371d331f5f1de409134c2c957ac7cd7c45cc0",
                                    "typeString": "literal_string \"Invalid address. Address check failed. Should not reach this point.\""
                                  }
                                ],
                                "id": 2121,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [4294967277, 4294967277],
                                "referencedDeclaration": 4294967277,
                                "src": "5260:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5260:77:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2124,
                            "nodeType": "ExpressionStatement",
                            "src": "5260:77:4"
                          }
                        ]
                      },
                      "id": 2126,
                      "nodeType": "IfStatement",
                      "src": "4936:412:4",
                      "trueBody": {
                        "id": 2120,
                        "nodeType": "Block",
                        "src": "4981:259:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2093,
                                "name": "teamAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2017,
                                "src": "4995:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 2094,
                                  "name": "thirdPlace",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 93,
                                  "src": "5009:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$1134_storage",
                                    "typeString": "struct ContestTeamRegistry.Team storage ref"
                                  }
                                },
                                "id": 2095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "teamAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1127,
                                "src": "5009:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4995:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2097,
                            "nodeType": "ExpressionStatement",
                            "src": "4995:36:4"
                          },
                          {
                            "expression": {
                              "id": 2101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2098,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2020,
                                "src": "5045:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 2099,
                                  "name": "thirdPlacePrize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "5054:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                    "typeString": "struct Hackathon.Prize storage ref"
                                  }
                                },
                                "id": 2100,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1787,
                                "src": "5054:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5045:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2102,
                            "nodeType": "ExpressionStatement",
                            "src": "5045:31:4"
                          },
                          {
                            "expression": {
                              "id": 2105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2103,
                                "name": "rankPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2023,
                                "src": "5090:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "33",
                                "id": 2104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5105:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "5090:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 2106,
                            "nodeType": "ExpressionStatement",
                            "src": "5090:16:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "5128:21:4",
                                  "subExpression": {
                                    "expression": {
                                      "id": 2108,
                                      "name": "thirdPlacePrize",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1802,
                                      "src": "5129:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                        "typeString": "struct Hackathon.Prize storage ref"
                                      }
                                    },
                                    "id": 2109,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "paid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1789,
                                    "src": "5129:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5072697a6520616c7265616479207061696420666f7220746869726420706c616365",
                                  "id": 2111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5151:36:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_99b3c08ddbb6f6de361039e625a6b03265a8247d25a65a0ed805729fc4d9db4d",
                                    "typeString": "literal_string \"Prize already paid for third place\""
                                  },
                                  "value": "Prize already paid for third place"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_99b3c08ddbb6f6de361039e625a6b03265a8247d25a65a0ed805729fc4d9db4d",
                                    "typeString": "literal_string \"Prize already paid for third place\""
                                  }
                                ],
                                "id": 2107,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [4294967278, 4294967278],
                                "referencedDeclaration": 4294967278,
                                "src": "5120:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5120:68:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2113,
                            "nodeType": "ExpressionStatement",
                            "src": "5120:68:4"
                          },
                          {
                            "expression": {
                              "id": 2118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 2114,
                                  "name": "thirdPlacePrize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "5202:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                    "typeString": "struct Hackathon.Prize storage ref"
                                  }
                                },
                                "id": 2116,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "paid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1789,
                                "src": "5202:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 2117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5225:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "5202:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2119,
                            "nodeType": "ExpressionStatement",
                            "src": "5202:27:4"
                          }
                        ]
                      }
                    },
                    "id": 2127,
                    "nodeType": "IfStatement",
                    "src": "4620:728:4",
                    "trueBody": {
                      "id": 2088,
                      "nodeType": "Block",
                      "src": "4666:264:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2061,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "4680:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 2062,
                                "name": "secondPlace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "4694:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$1134_storage",
                                  "typeString": "struct ContestTeamRegistry.Team storage ref"
                                }
                              },
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "teamAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "4694:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4680:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2065,
                          "nodeType": "ExpressionStatement",
                          "src": "4680:37:4"
                        },
                        {
                          "expression": {
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2066,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "4731:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 2067,
                                "name": "secondPlacePrize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1800,
                                "src": "4740:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                  "typeString": "struct Hackathon.Prize storage ref"
                                }
                              },
                              "id": 2068,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1787,
                              "src": "4740:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4731:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2070,
                          "nodeType": "ExpressionStatement",
                          "src": "4731:32:4"
                        },
                        {
                          "expression": {
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2071,
                              "name": "rankPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "4777:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "32",
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4792:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4777:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 2074,
                          "nodeType": "ExpressionStatement",
                          "src": "4777:16:4"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4815:22:4",
                                "subExpression": {
                                  "expression": {
                                    "id": 2076,
                                    "name": "secondPlacePrize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1800,
                                    "src": "4816:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                      "typeString": "struct Hackathon.Prize storage ref"
                                    }
                                  },
                                  "id": 2077,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1789,
                                  "src": "4816:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5072697a6520616c7265616479207061696420666f72207365636f6e6420706c616365",
                                "id": 2079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4839:37:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f838c111053cd68b0141c2f38cba7cbf8b60f2d00a9fafe6b687584d8fe749de",
                                  "typeString": "literal_string \"Prize already paid for second place\""
                                },
                                "value": "Prize already paid for second place"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f838c111053cd68b0141c2f38cba7cbf8b60f2d00a9fafe6b687584d8fe749de",
                                  "typeString": "literal_string \"Prize already paid for second place\""
                                }
                              ],
                              "id": 2075,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "src": "4807:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4807:70:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2081,
                          "nodeType": "ExpressionStatement",
                          "src": "4807:70:4"
                        },
                        {
                          "expression": {
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 2082,
                                "name": "secondPlacePrize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1800,
                                "src": "4891:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                  "typeString": "struct Hackathon.Prize storage ref"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "paid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1789,
                              "src": "4891:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 2085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4915:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "4891:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2087,
                          "nodeType": "ExpressionStatement",
                          "src": "4891:28:4"
                        }
                      ]
                    }
                  },
                  "id": 2128,
                  "nodeType": "IfStatement",
                  "src": "4310:1038:4",
                  "trueBody": {
                    "id": 2056,
                    "nodeType": "Block",
                    "src": "4355:259:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2029,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "4369:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2030,
                              "name": "firstPlace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "4383:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$1134_storage",
                                "typeString": "struct ContestTeamRegistry.Team storage ref"
                              }
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "teamAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1127,
                            "src": "4383:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4369:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2033,
                        "nodeType": "ExpressionStatement",
                        "src": "4369:36:4"
                      },
                      {
                        "expression": {
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2034,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2020,
                            "src": "4419:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2035,
                              "name": "firstPlacePrize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "4428:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                "typeString": "struct Hackathon.Prize storage ref"
                              }
                            },
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1787,
                            "src": "4428:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4419:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2038,
                        "nodeType": "ExpressionStatement",
                        "src": "4419:31:4"
                      },
                      {
                        "expression": {
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2039,
                            "name": "rankPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "4464:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4479:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4464:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 2042,
                        "nodeType": "ExpressionStatement",
                        "src": "4464:16:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4502:21:4",
                              "subExpression": {
                                "expression": {
                                  "id": 2044,
                                  "name": "firstPlacePrize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1798,
                                  "src": "4503:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                    "typeString": "struct Hackathon.Prize storage ref"
                                  }
                                },
                                "id": 2045,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1789,
                                "src": "4503:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072697a6520616c7265616479207061696420666f7220666972737420706c616365",
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4525:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99226e35aabf9d196c8ac70dd30e489093fd1dab36d6504997b708f21d1bfde9",
                                "typeString": "literal_string \"Prize already paid for first place\""
                              },
                              "value": "Prize already paid for first place"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_99226e35aabf9d196c8ac70dd30e489093fd1dab36d6504997b708f21d1bfde9",
                                "typeString": "literal_string \"Prize already paid for first place\""
                              }
                            ],
                            "id": 2043,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [4294967278, 4294967278],
                            "referencedDeclaration": 4294967278,
                            "src": "4494:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4494:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2049,
                        "nodeType": "ExpressionStatement",
                        "src": "4494:68:4"
                      },
                      {
                        "expression": {
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2050,
                              "name": "firstPlacePrize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "4576:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                "typeString": "struct Hackathon.Prize storage ref"
                              }
                            },
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "paid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1789,
                            "src": "4576:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4599:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4576:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2055,
                        "nodeType": "ExpressionStatement",
                        "src": "4576:27:4"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2130,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "5372:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2131,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "5385:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2132,
                        "name": "rankPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "5393:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 2133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5407:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5407:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 2135,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5419:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5419:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2129,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "5363:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint8,address,uint256)"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5363:72:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2138,
                  "nodeType": "EmitStatement",
                  "src": "5358:77:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2140,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "5496:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2139,
                            "name": "IPayable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2987,
                            "src": "5487:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPayable_$2987_$",
                              "typeString": "type(contract IPayable)"
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPayable_$2987",
                            "typeString": "contract IPayable"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2986,
                        "src": "5487:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2143,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "5524:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5487:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "5487:46:4"
                }
              ]
            },
            "documentation": {
              "id": 2001,
              "nodeType": "StructuredDocumentation",
              "src": "3884:128:4",
              "text": "@notice Allows withdrawing prizes to winners.\n@dev Winners must implement IPayable to receive funds."
            },
            "functionSelector": "11dc45c9",
            "id": 2148,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2006,
                "modifierName": {
                  "id": 2005,
                  "name": "whenRankPublished",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 146,
                  "src": "4088:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4088:17:4"
              },
              {
                "id": 2008,
                "modifierName": {
                  "id": 2007,
                  "name": "whenPrizeAllocated",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1849,
                  "src": "4114:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4114:18:4"
              },
              {
                "arguments": [
                  {
                    "id": 2010,
                    "name": "winnerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2003,
                    "src": "4158:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2011,
                "modifierName": {
                  "id": 2009,
                  "name": "onlyValidAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1888,
                  "src": "4141:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4141:31:4"
              },
              {
                "arguments": [
                  {
                    "id": 2013,
                    "name": "winnerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2003,
                    "src": "4199:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2014,
                "modifierName": {
                  "id": 2012,
                  "name": "onlyWinnerAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1862,
                  "src": "4181:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4181:32:4"
              }
            ],
            "name": "withdrawPrize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2148,
                  "src": "4040:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:23:4"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4218:0:4"
            },
            "scope": 2174,
            "src": "4017:1523:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2172,
              "nodeType": "Block",
              "src": "5700:206:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2156,
                              "name": "winnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "5731:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2157,
                                "name": "firstPlace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "5748:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$1134_storage",
                                  "typeString": "struct ContestTeamRegistry.Team storage ref"
                                }
                              },
                              "id": 2158,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "teamAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "5748:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5731:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2160,
                              "name": "winnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "5790:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2161,
                                "name": "secondPlace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "5807:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$1134_storage",
                                  "typeString": "struct ContestTeamRegistry.Team storage ref"
                                }
                              },
                              "id": 2162,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "teamAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "5807:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5790:40:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5731:99:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2165,
                            "name": "winnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "5850:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2166,
                              "name": "thirdPlace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "5867:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$1134_storage",
                                "typeString": "struct ContestTeamRegistry.Team storage ref"
                              }
                            },
                            "id": 2167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "teamAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1127,
                            "src": "5867:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5850:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5731:158:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2170,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5717:182:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2155,
                  "id": 2171,
                  "nodeType": "Return",
                  "src": "5710:189:4"
                }
              ]
            },
            "documentation": {
              "id": 2149,
              "nodeType": "StructuredDocumentation",
              "src": "5546:72:4",
              "text": "Checks if the specifier address is one of the winners"
            },
            "id": 2173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWinnerAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2151,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "5649:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5649:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:23:4"
            },
            "returnParameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "5694:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5694:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5693:6:4"
            },
            "scope": 2174,
            "src": "5624:282:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2175,
        "src": "637:5271:4"
      }
    ],
    "src": "40:5869:4"
  },
  "legacyAST": {
    "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/Hackathon.sol",
    "exportedSymbols": {
      "ContestBracketRegistry": [674],
      "ContestRoleManager": [3326],
      "ContestTeamRegistry": [1772],
      "Hackathon": [2174],
      "IPayable": [2987],
      "JudgeRole": [3416],
      "OrganizerRole": [3532],
      "Payable": [3026],
      "Roles": [3618],
      "SafeMath": [3814]
    },
    "id": 2175,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1774,
        "literals": ["solidity", ">=", "0.7", ".0", "<", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "40:31:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 1775,
        "nodeType": "ImportDirective",
        "scope": 2175,
        "sourceUnit": 3815,
        "src": "73:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/core/ContestBracketRegistry.sol",
        "file": "./ContestBracketRegistry.sol",
        "id": 1776,
        "nodeType": "ImportDirective",
        "scope": 2175,
        "sourceUnit": 675,
        "src": "126:38:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/fodisi/56401C55401C3DE5/dev/Projects/hackapay/contracts/payment/Payable.sol",
        "file": "../payment/Payable.sol",
        "id": 1777,
        "nodeType": "ImportDirective",
        "scope": 2175,
        "sourceUnit": 3027,
        "src": "165:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1779,
              "name": "Payable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3026,
              "src": "659:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Payable_$3026",
                "typeString": "contract Payable"
              }
            },
            "id": 1780,
            "nodeType": "InheritanceSpecifier",
            "src": "659:7:4"
          },
          {
            "baseName": {
              "id": 1781,
              "name": "ContestBracketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 674,
              "src": "668:22:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContestBracketRegistry_$674",
                "typeString": "contract ContestBracketRegistry"
              }
            },
            "id": 1782,
            "nodeType": "InheritanceSpecifier",
            "src": "668:22:4"
          }
        ],
        "contractDependencies": [674, 1772, 2987, 3026, 3326, 3416, 3532],
        "contractKind": "contract",
        "documentation": {
          "id": 1778,
          "nodeType": "StructuredDocumentation",
          "src": "199:437:4",
          "text": "@notice Represents a hackathon contest, where organizers can control the\nstages/phases of the contest (such as registration, submission, evaluation and results)\nas well as pay prizes to the winners.\n@dev For the payment functionality, the \"withdraw pattern\" is being implemented for this contract.\nThe ledger allocation is done is the method {allocatePrize} and the withdraw is implemented on {withdrawPrize}."
        },
        "fullyImplemented": true,
        "id": 2174,
        "linearizedBaseContracts": [2174, 674, 3326, 3416, 3532, 1772, 3026, 2987],
        "name": "Hackathon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1785,
            "libraryName": {
              "id": 1783,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3814,
              "src": "703:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3814",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "697:27:4",
            "typeName": {
              "id": 1784,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "716:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Hackathon.Prize",
            "id": 1790,
            "members": [
              {
                "constant": false,
                "id": 1787,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 1790,
                "src": "809:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1786,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1789,
                "mutability": "mutable",
                "name": "paid",
                "nodeType": "VariableDeclaration",
                "scope": 1790,
                "src": "833:9:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1788,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "833:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prize",
            "nodeType": "StructDefinition",
            "scope": 2174,
            "src": "786:63:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af640d0f",
            "id": 1792,
            "mutability": "mutable",
            "name": "id",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "855:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1791,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1794,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "878:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1793,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "878:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7284e416",
            "id": 1796,
            "mutability": "mutable",
            "name": "description",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "903:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1795,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1798,
            "mutability": "mutable",
            "name": "firstPlacePrize",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "935:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Prize_$1790_storage",
              "typeString": "struct Hackathon.Prize"
            },
            "typeName": {
              "id": 1797,
              "name": "Prize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "935:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Prize_$1790_storage_ptr",
                "typeString": "struct Hackathon.Prize"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1800,
            "mutability": "mutable",
            "name": "secondPlacePrize",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "971:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Prize_$1790_storage",
              "typeString": "struct Hackathon.Prize"
            },
            "typeName": {
              "id": 1799,
              "name": "Prize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "971:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Prize_$1790_storage_ptr",
                "typeString": "struct Hackathon.Prize"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1802,
            "mutability": "mutable",
            "name": "thirdPlacePrize",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "1008:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Prize_$1790_storage",
              "typeString": "struct Hackathon.Prize"
            },
            "typeName": {
              "id": 1801,
              "name": "Prize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1790,
              "src": "1008:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Prize_$1790_storage_ptr",
                "typeString": "struct Hackathon.Prize"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1804,
            "mutability": "mutable",
            "name": "prizesAllocated",
            "nodeType": "VariableDeclaration",
            "scope": 2174,
            "src": "1044:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1803,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1044:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "1080:135:4",
              "text": "@dev emitted when the prize allocation is performed. This may be used to alert winners that their prizes are available to withdraw."
            },
            "id": 1817,
            "name": "PrizeAllocation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstPlacePrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1251:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "secondPlacePrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1284:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thirdPlacePrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1318:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1813,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "organizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1351:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "datetime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "1386:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:167:4"
            },
            "src": "1220:189:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1818,
              "nodeType": "StructuredDocumentation",
              "src": "1415:59:4",
              "text": "@dev emitted when a prize is withdraw by a winner team."
            },
            "id": 1830,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1820,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1494:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1514:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rankPosition",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1530:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requester",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1550:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1828,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "datetime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1577:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:101:4"
            },
            "src": "1479:116:4"
          },
          {
            "body": {
              "id": 1839,
              "nodeType": "Block",
              "src": "1634:81:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1652:16:4",
                        "subExpression": {
                          "id": 1833,
                          "name": "prizesAllocated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1804,
                          "src": "1653:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072697a657320616c726561647920616c6c6f6361746564",
                        "id": 1835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1670:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf96c3e55398b1e61a28ff861bf1a69cf40f8effec6e352b73c139e92b58147e",
                          "typeString": "literal_string \"Prizes already allocated\""
                        },
                        "value": "Prizes already allocated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf96c3e55398b1e61a28ff861bf1a69cf40f8effec6e352b73c139e92b58147e",
                          "typeString": "literal_string \"Prizes already allocated\""
                        }
                      ],
                      "id": 1832,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1644:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1837,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:53:4"
                },
                {
                  "id": 1838,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:4"
                }
              ]
            },
            "id": 1840,
            "name": "whenPrizeNotAllocated",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1631:2:4"
            },
            "src": "1601:114:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "1751:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1843,
                        "name": "prizesAllocated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "1769:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072697a6573206e6f7420616c6c6f636174656420796574",
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1786:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc7e4d62b3e9c65907c4925855d5646179a53c0fb400b0698f5dbbb3d0773704",
                          "typeString": "literal_string \"Prizes not allocated yet\""
                        },
                        "value": "Prizes not allocated yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc7e4d62b3e9c65907c4925855d5646179a53c0fb400b0698f5dbbb3d0773704",
                          "typeString": "literal_string \"Prizes not allocated yet\""
                        }
                      ],
                      "id": 1842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1761:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:52:4"
                },
                {
                  "id": 1847,
                  "nodeType": "PlaceholderStatement",
                  "src": "1823:1:4"
                }
              ]
            },
            "id": 1849,
            "name": "whenPrizeAllocated",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:2:4"
            },
            "src": "1721:110:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "1887:102:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1855,
                            "name": "winnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1851,
                            "src": "1921:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1854,
                          "name": "isWinnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2173,
                          "src": "1905:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:30:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e742061646472657373206973206e6f7420612077696e6e6572",
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1937:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97b31c34870bc516686cd656eda50f3a0b810bd21d94f28d52affe849bf23342",
                          "typeString": "literal_string \"Account address is not a winner\""
                        },
                        "value": "Account address is not a winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97b31c34870bc516686cd656eda50f3a0b810bd21d94f28d52affe849bf23342",
                          "typeString": "literal_string \"Account address is not a winner\""
                        }
                      ],
                      "id": 1853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1897:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1859,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:74:4"
                },
                {
                  "id": 1860,
                  "nodeType": "PlaceholderStatement",
                  "src": "1981:1:4"
                }
              ]
            },
            "id": 1862,
            "name": "onlyWinnerAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "1864:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1863:23:4"
            },
            "src": "1837:152:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1887,
              "nodeType": "Block",
              "src": "2038:179:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1867,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "2056:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2075:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2067:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1868,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2067:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2067:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2056:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207a65726f2061646472657373",
                        "id": 1873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2079:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ff7cda39684c4fc70305248b0bb03dec7a83a7c720aedf63600d835df66b7c7",
                          "typeString": "literal_string \"Invalid zero address\""
                        },
                        "value": "Invalid zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ff7cda39684c4fc70305248b0bb03dec7a83a7c720aedf63600d835df66b7c7",
                          "typeString": "literal_string \"Invalid zero address\""
                        }
                      ],
                      "id": 1866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2048:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1875,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1877,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "2120:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1880,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2139:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon_$2174",
                                "typeString": "contract Hackathon"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Hackathon_$2174",
                                "typeString": "contract Hackathon"
                              }
                            ],
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2131:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1878,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2131:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2131:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2120:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573732063616e6e6f7420626520657175616c20746f20636f6e7472616374202874686973292061646472657373",
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2146:52:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83cda136770e17f6f31be761df65fed1b68fd4b5f98b2d3b5153d11abf7a1099",
                          "typeString": "literal_string \"Address cannot be equal to contract (this) address\""
                        },
                        "value": "Address cannot be equal to contract (this) address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83cda136770e17f6f31be761df65fed1b68fd4b5f98b2d3b5153d11abf7a1099",
                          "typeString": "literal_string \"Address cannot be equal to contract (this) address\""
                        }
                      ],
                      "id": 1876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2112:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:87:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1885,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:87:4"
                },
                {
                  "id": 1886,
                  "nodeType": "PlaceholderStatement",
                  "src": "2209:1:4"
                }
              ]
            },
            "id": 1888,
            "name": "onlyValidAddress",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "2021:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:17:4"
            },
            "src": "1995:222:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "2695:164:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1904,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1893,
                            "src": "2713:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1906,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2719:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2713:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2725:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2713:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e616d65",
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2728:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19bb2f3dcef9fe4d075b4ea12031255ac5db5257bcefc4252f155c870adc52ea",
                          "typeString": "literal_string \"Invalid name\""
                        },
                        "value": "Invalid name"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19bb2f3dcef9fe4d075b4ea12031255ac5db5257bcefc4252f155c870adc52ea",
                          "typeString": "literal_string \"Invalid name\""
                        }
                      ],
                      "id": 1903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2705:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:38:4"
                },
                {
                  "expression": {
                    "id": 1914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1912,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1792,
                      "src": "2753:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1913,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1891,
                      "src": "2758:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2753:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1915,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:8:4"
                },
                {
                  "expression": {
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1916,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1794,
                      "src": "2771:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1917,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1893,
                      "src": "2778:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2771:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:12:4"
                },
                {
                  "expression": {
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1920,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1796,
                      "src": "2793:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1921,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "2807:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2793:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:26:4"
                },
                {
                  "expression": {
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1924,
                      "name": "prizesAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "2829:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2847:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2829:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:23:4"
                }
              ]
            },
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "2223:326:4",
              "text": "@notice Creates a new Hackathon contract with a specific _id, _name, desciption,\nand a specific organizer.\n@param _id {uint256} Hackathon's unique indentifier\n@param _name {bytes32} Hackathon's name. Required.\n@param _description {bytes32} Hackathon's description. Optional."
            },
            "id": 1929,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1900,
                    "name": "initialOrganizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1897,
                    "src": "2673:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1901,
                "modifierName": {
                  "id": 1899,
                  "name": "ContestBracketRegistry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 674,
                  "src": "2650:22:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContestBracketRegistry_$674_$",
                    "typeString": "type(contract ContestBracketRegistry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2650:40:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2566:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2579:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2579:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2594:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1897,
                  "mutability": "mutable",
                  "name": "initialOrganizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "2616:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:76:4"
            },
            "returnParameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:0:4"
            },
            "scope": 2174,
            "src": "2554:305:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1999,
              "nodeType": "Block",
              "src": "3403:475:4",
              "statements": [
                {
                  "assignments": [1944],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1944,
                      "mutability": "mutable",
                      "name": "totalPrizes",
                      "nodeType": "VariableDeclaration",
                      "scope": 1999,
                      "src": "3413:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3413:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1952,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1950,
                        "name": "thirdPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "3467:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1947,
                            "name": "secondPrize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "3450:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1945,
                            "name": "firstPrize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "3435:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3647,
                          "src": "3435:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3435:27:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3647,
                      "src": "3435:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3413:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1954,
                          "name": "totalPrizes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1944,
                          "src": "3496:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1957,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3519:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon_$2174",
                                  "typeString": "contract Hackathon"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Hackathon_$2174",
                                  "typeString": "contract Hackathon"
                                }
                              ],
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3511:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3511:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3511:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3511:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3496:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320617661696c61626c6520696e206861636b6174686f6e20636f6e7472616374",
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3534:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a246f0e358a4bd74091742f06fd7de38f1bdc745c64b8ecee65bb0cdd6477163",
                          "typeString": "literal_string \"Not enough funds available in hackathon contract\""
                        },
                        "value": "Not enough funds available in hackathon contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a246f0e358a4bd74091742f06fd7de38f1bdc745c64b8ecee65bb0cdd6477163",
                          "typeString": "literal_string \"Not enough funds available in hackathon contract\""
                        }
                      ],
                      "id": 1953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3488:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1963,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:97:4"
                },
                {
                  "expression": {
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1964,
                      "name": "firstPlacePrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1798,
                      "src": "3595:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                        "typeString": "struct Hackathon.Prize storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1966,
                          "name": "firstPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "3619:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3631:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1965,
                        "name": "Prize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "3613:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prize_$1790_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Prize storage pointer)"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3613:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_memory_ptr",
                        "typeString": "struct Hackathon.Prize memory"
                      }
                    },
                    "src": "3595:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                      "typeString": "struct Hackathon.Prize storage ref"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:42:4"
                },
                {
                  "expression": {
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1971,
                      "name": "secondPlacePrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "3647:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                        "typeString": "struct Hackathon.Prize storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1973,
                          "name": "secondPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1934,
                          "src": "3672:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3685:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1972,
                        "name": "Prize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "3666:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prize_$1790_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Prize storage pointer)"
                        }
                      },
                      "id": 1975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3666:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_memory_ptr",
                        "typeString": "struct Hackathon.Prize memory"
                      }
                    },
                    "src": "3647:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                      "typeString": "struct Hackathon.Prize storage ref"
                    }
                  },
                  "id": 1977,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:44:4"
                },
                {
                  "expression": {
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1978,
                      "name": "thirdPlacePrize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "3701:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                        "typeString": "struct Hackathon.Prize storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1980,
                          "name": "thirdPrize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1936,
                          "src": "3725:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3737:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1979,
                        "name": "Prize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1790,
                        "src": "3719:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Prize_$1790_storage_ptr_$",
                          "typeString": "type(struct Hackathon.Prize storage pointer)"
                        }
                      },
                      "id": 1982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3719:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prize_$1790_memory_ptr",
                        "typeString": "struct Hackathon.Prize memory"
                      }
                    },
                    "src": "3701:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                      "typeString": "struct Hackathon.Prize storage ref"
                    }
                  },
                  "id": 1984,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:42:4"
                },
                {
                  "expression": {
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1985,
                      "name": "prizesAllocated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "3753:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3771:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3753:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "3753:22:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1990,
                        "name": "firstPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "3806:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1991,
                        "name": "secondPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "3818:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1992,
                        "name": "thirdPrize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1936,
                        "src": "3831:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1993,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3843:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3843:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1995,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3855:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3855:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1989,
                      "name": "PrizeAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1817,
                      "src": "3790:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:81:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "EmitStatement",
                  "src": "3785:86:4"
                }
              ]
            },
            "documentation": {
              "id": 1930,
              "nodeType": "StructuredDocumentation",
              "src": "2865:376:4",
              "text": "@notice Allows the organizer to allocate funds that's going to be distributed to winners.\n@dev It does not associate the prize with a specific account, since prizes cound be associated any moment\nby the organizers, as long as prizes were not allocated before.\nThe contract needs to have enought balance to allocate funds to winners."
            },
            "functionSelector": "f59ec3f9",
            "id": 2000,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1939,
                "modifierName": {
                  "id": 1938,
                  "name": "onlyOrganizer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3465,
                  "src": "3355:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3355:13:4"
              },
              {
                "id": 1941,
                "modifierName": {
                  "id": 1940,
                  "name": "whenPrizeNotAllocated",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1840,
                  "src": "3377:21:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3377:21:4"
              }
            ],
            "name": "allocatePrize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "firstPrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2000,
                  "src": "3269:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "secondPrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2000,
                  "src": "3289:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1936,
                  "mutability": "mutable",
                  "name": "thirdPrize",
                  "nodeType": "VariableDeclaration",
                  "scope": 2000,
                  "src": "3310:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3268:61:4"
            },
            "returnParameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3403:0:4"
            },
            "scope": 2174,
            "src": "3246:632:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2147,
              "nodeType": "Block",
              "src": "4218:1322:4",
              "statements": [
                {
                  "assignments": [2017],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "mutability": "mutable",
                      "name": "teamAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2147,
                      "src": "4228:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2016,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4228:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2018,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4228:19:4"
                },
                {
                  "assignments": [2020],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2020,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2147,
                      "src": "4257:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4257:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2021,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4257:14:4"
                },
                {
                  "assignments": [2023],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2023,
                      "mutability": "mutable",
                      "name": "rankPosition",
                      "nodeType": "VariableDeclaration",
                      "scope": 2147,
                      "src": "4281:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2022,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4281:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4281:18:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2025,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2003,
                      "src": "4314:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 2026,
                        "name": "firstPlace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "4331:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$1134_storage",
                          "typeString": "struct ContestTeamRegistry.Team storage ref"
                        }
                      },
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "teamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1127,
                      "src": "4331:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4314:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2057,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "4624:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 2058,
                          "name": "secondPlace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "4641:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$1134_storage",
                            "typeString": "struct ContestTeamRegistry.Team storage ref"
                          }
                        },
                        "id": 2059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "teamAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1127,
                        "src": "4641:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4624:40:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2089,
                          "name": "winnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2003,
                          "src": "4940:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2090,
                            "name": "thirdPlace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "4957:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$1134_storage",
                              "typeString": "struct ContestTeamRegistry.Team storage ref"
                            }
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1127,
                          "src": "4957:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4940:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2125,
                        "nodeType": "Block",
                        "src": "5246:102:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "496e76616c696420616464726573732e204164647265737320636865636b206661696c65642e2053686f756c64206e6f74207265616368207468697320706f696e742e",
                                  "id": 2122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5267:69:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_84888db729f17b29a04acf7a945371d331f5f1de409134c2c957ac7cd7c45cc0",
                                    "typeString": "literal_string \"Invalid address. Address check failed. Should not reach this point.\""
                                  },
                                  "value": "Invalid address. Address check failed. Should not reach this point."
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_84888db729f17b29a04acf7a945371d331f5f1de409134c2c957ac7cd7c45cc0",
                                    "typeString": "literal_string \"Invalid address. Address check failed. Should not reach this point.\""
                                  }
                                ],
                                "id": 2121,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [4294967277, 4294967277],
                                "referencedDeclaration": 4294967277,
                                "src": "5260:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5260:77:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2124,
                            "nodeType": "ExpressionStatement",
                            "src": "5260:77:4"
                          }
                        ]
                      },
                      "id": 2126,
                      "nodeType": "IfStatement",
                      "src": "4936:412:4",
                      "trueBody": {
                        "id": 2120,
                        "nodeType": "Block",
                        "src": "4981:259:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2093,
                                "name": "teamAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2017,
                                "src": "4995:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 2094,
                                  "name": "thirdPlace",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 93,
                                  "src": "5009:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$1134_storage",
                                    "typeString": "struct ContestTeamRegistry.Team storage ref"
                                  }
                                },
                                "id": 2095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "teamAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1127,
                                "src": "5009:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4995:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2097,
                            "nodeType": "ExpressionStatement",
                            "src": "4995:36:4"
                          },
                          {
                            "expression": {
                              "id": 2101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2098,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2020,
                                "src": "5045:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 2099,
                                  "name": "thirdPlacePrize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "5054:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                    "typeString": "struct Hackathon.Prize storage ref"
                                  }
                                },
                                "id": 2100,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1787,
                                "src": "5054:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5045:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2102,
                            "nodeType": "ExpressionStatement",
                            "src": "5045:31:4"
                          },
                          {
                            "expression": {
                              "id": 2105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2103,
                                "name": "rankPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2023,
                                "src": "5090:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "33",
                                "id": 2104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5105:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "5090:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 2106,
                            "nodeType": "ExpressionStatement",
                            "src": "5090:16:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "5128:21:4",
                                  "subExpression": {
                                    "expression": {
                                      "id": 2108,
                                      "name": "thirdPlacePrize",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1802,
                                      "src": "5129:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                        "typeString": "struct Hackathon.Prize storage ref"
                                      }
                                    },
                                    "id": 2109,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "paid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1789,
                                    "src": "5129:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "5072697a6520616c7265616479207061696420666f7220746869726420706c616365",
                                  "id": 2111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5151:36:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_99b3c08ddbb6f6de361039e625a6b03265a8247d25a65a0ed805729fc4d9db4d",
                                    "typeString": "literal_string \"Prize already paid for third place\""
                                  },
                                  "value": "Prize already paid for third place"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_99b3c08ddbb6f6de361039e625a6b03265a8247d25a65a0ed805729fc4d9db4d",
                                    "typeString": "literal_string \"Prize already paid for third place\""
                                  }
                                ],
                                "id": 2107,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [4294967278, 4294967278],
                                "referencedDeclaration": 4294967278,
                                "src": "5120:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5120:68:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2113,
                            "nodeType": "ExpressionStatement",
                            "src": "5120:68:4"
                          },
                          {
                            "expression": {
                              "id": 2118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 2114,
                                  "name": "thirdPlacePrize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "5202:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                    "typeString": "struct Hackathon.Prize storage ref"
                                  }
                                },
                                "id": 2116,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "paid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1789,
                                "src": "5202:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 2117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5225:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "5202:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2119,
                            "nodeType": "ExpressionStatement",
                            "src": "5202:27:4"
                          }
                        ]
                      }
                    },
                    "id": 2127,
                    "nodeType": "IfStatement",
                    "src": "4620:728:4",
                    "trueBody": {
                      "id": 2088,
                      "nodeType": "Block",
                      "src": "4666:264:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2061,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "4680:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 2062,
                                "name": "secondPlace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "4694:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$1134_storage",
                                  "typeString": "struct ContestTeamRegistry.Team storage ref"
                                }
                              },
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "teamAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "4694:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4680:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2065,
                          "nodeType": "ExpressionStatement",
                          "src": "4680:37:4"
                        },
                        {
                          "expression": {
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2066,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "4731:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 2067,
                                "name": "secondPlacePrize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1800,
                                "src": "4740:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                  "typeString": "struct Hackathon.Prize storage ref"
                                }
                              },
                              "id": 2068,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1787,
                              "src": "4740:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4731:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2070,
                          "nodeType": "ExpressionStatement",
                          "src": "4731:32:4"
                        },
                        {
                          "expression": {
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2071,
                              "name": "rankPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "4777:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "32",
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4792:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4777:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 2074,
                          "nodeType": "ExpressionStatement",
                          "src": "4777:16:4"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4815:22:4",
                                "subExpression": {
                                  "expression": {
                                    "id": 2076,
                                    "name": "secondPlacePrize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1800,
                                    "src": "4816:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                      "typeString": "struct Hackathon.Prize storage ref"
                                    }
                                  },
                                  "id": 2077,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1789,
                                  "src": "4816:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "5072697a6520616c7265616479207061696420666f72207365636f6e6420706c616365",
                                "id": 2079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4839:37:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f838c111053cd68b0141c2f38cba7cbf8b60f2d00a9fafe6b687584d8fe749de",
                                  "typeString": "literal_string \"Prize already paid for second place\""
                                },
                                "value": "Prize already paid for second place"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f838c111053cd68b0141c2f38cba7cbf8b60f2d00a9fafe6b687584d8fe749de",
                                  "typeString": "literal_string \"Prize already paid for second place\""
                                }
                              ],
                              "id": 2075,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "src": "4807:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4807:70:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2081,
                          "nodeType": "ExpressionStatement",
                          "src": "4807:70:4"
                        },
                        {
                          "expression": {
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 2082,
                                "name": "secondPlacePrize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1800,
                                "src": "4891:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                  "typeString": "struct Hackathon.Prize storage ref"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "paid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1789,
                              "src": "4891:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 2085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4915:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "4891:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2087,
                          "nodeType": "ExpressionStatement",
                          "src": "4891:28:4"
                        }
                      ]
                    }
                  },
                  "id": 2128,
                  "nodeType": "IfStatement",
                  "src": "4310:1038:4",
                  "trueBody": {
                    "id": 2056,
                    "nodeType": "Block",
                    "src": "4355:259:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2029,
                            "name": "teamAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "4369:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2030,
                              "name": "firstPlace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "4383:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$1134_storage",
                                "typeString": "struct ContestTeamRegistry.Team storage ref"
                              }
                            },
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "teamAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1127,
                            "src": "4383:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4369:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2033,
                        "nodeType": "ExpressionStatement",
                        "src": "4369:36:4"
                      },
                      {
                        "expression": {
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2034,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2020,
                            "src": "4419:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2035,
                              "name": "firstPlacePrize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "4428:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                "typeString": "struct Hackathon.Prize storage ref"
                              }
                            },
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1787,
                            "src": "4428:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4419:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2038,
                        "nodeType": "ExpressionStatement",
                        "src": "4419:31:4"
                      },
                      {
                        "expression": {
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2039,
                            "name": "rankPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "4464:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4479:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4464:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 2042,
                        "nodeType": "ExpressionStatement",
                        "src": "4464:16:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4502:21:4",
                              "subExpression": {
                                "expression": {
                                  "id": 2044,
                                  "name": "firstPlacePrize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1798,
                                  "src": "4503:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                    "typeString": "struct Hackathon.Prize storage ref"
                                  }
                                },
                                "id": 2045,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paid",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1789,
                                "src": "4503:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072697a6520616c7265616479207061696420666f7220666972737420706c616365",
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4525:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99226e35aabf9d196c8ac70dd30e489093fd1dab36d6504997b708f21d1bfde9",
                                "typeString": "literal_string \"Prize already paid for first place\""
                              },
                              "value": "Prize already paid for first place"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_99226e35aabf9d196c8ac70dd30e489093fd1dab36d6504997b708f21d1bfde9",
                                "typeString": "literal_string \"Prize already paid for first place\""
                              }
                            ],
                            "id": 2043,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [4294967278, 4294967278],
                            "referencedDeclaration": 4294967278,
                            "src": "4494:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4494:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2049,
                        "nodeType": "ExpressionStatement",
                        "src": "4494:68:4"
                      },
                      {
                        "expression": {
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2050,
                              "name": "firstPlacePrize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "4576:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prize_$1790_storage",
                                "typeString": "struct Hackathon.Prize storage ref"
                              }
                            },
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "paid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1789,
                            "src": "4576:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4599:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4576:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2055,
                        "nodeType": "ExpressionStatement",
                        "src": "4576:27:4"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2130,
                        "name": "teamAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "5372:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2131,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "5385:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2132,
                        "name": "rankPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2023,
                        "src": "5393:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 2133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5407:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5407:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 2135,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5419:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5419:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2129,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "5363:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint8,address,uint256)"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5363:72:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2138,
                  "nodeType": "EmitStatement",
                  "src": "5358:77:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2140,
                              "name": "teamAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2017,
                              "src": "5496:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2139,
                            "name": "IPayable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2987,
                            "src": "5487:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPayable_$2987_$",
                              "typeString": "type(contract IPayable)"
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPayable_$2987",
                            "typeString": "contract IPayable"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2986,
                        "src": "5487:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2143,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "5524:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5487:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "5487:46:4"
                }
              ]
            },
            "documentation": {
              "id": 2001,
              "nodeType": "StructuredDocumentation",
              "src": "3884:128:4",
              "text": "@notice Allows withdrawing prizes to winners.\n@dev Winners must implement IPayable to receive funds."
            },
            "functionSelector": "11dc45c9",
            "id": 2148,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2006,
                "modifierName": {
                  "id": 2005,
                  "name": "whenRankPublished",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 146,
                  "src": "4088:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4088:17:4"
              },
              {
                "id": 2008,
                "modifierName": {
                  "id": 2007,
                  "name": "whenPrizeAllocated",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1849,
                  "src": "4114:18:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4114:18:4"
              },
              {
                "arguments": [
                  {
                    "id": 2010,
                    "name": "winnerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2003,
                    "src": "4158:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2011,
                "modifierName": {
                  "id": 2009,
                  "name": "onlyValidAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1888,
                  "src": "4141:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4141:31:4"
              },
              {
                "arguments": [
                  {
                    "id": 2013,
                    "name": "winnerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2003,
                    "src": "4199:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2014,
                "modifierName": {
                  "id": 2012,
                  "name": "onlyWinnerAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1862,
                  "src": "4181:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4181:32:4"
              }
            ],
            "name": "withdrawPrize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2148,
                  "src": "4040:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:23:4"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4218:0:4"
            },
            "scope": 2174,
            "src": "4017:1523:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2172,
              "nodeType": "Block",
              "src": "5700:206:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2156,
                              "name": "winnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "5731:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2157,
                                "name": "firstPlace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "5748:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$1134_storage",
                                  "typeString": "struct ContestTeamRegistry.Team storage ref"
                                }
                              },
                              "id": 2158,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "teamAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "5748:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5731:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2160,
                              "name": "winnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "5790:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 2161,
                                "name": "secondPlace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "5807:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$1134_storage",
                                  "typeString": "struct ContestTeamRegistry.Team storage ref"
                                }
                              },
                              "id": 2162,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "teamAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "5807:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5790:40:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5731:99:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2165,
                            "name": "winnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "5850:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2166,
                              "name": "thirdPlace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "5867:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$1134_storage",
                                "typeString": "struct ContestTeamRegistry.Team storage ref"
                              }
                            },
                            "id": 2167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "teamAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1127,
                            "src": "5867:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5850:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5731:158:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2170,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5717:182:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2155,
                  "id": 2171,
                  "nodeType": "Return",
                  "src": "5710:189:4"
                }
              ]
            },
            "documentation": {
              "id": 2149,
              "nodeType": "StructuredDocumentation",
              "src": "5546:72:4",
              "text": "Checks if the specifier address is one of the winners"
            },
            "id": 2173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWinnerAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2151,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "5649:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5649:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:23:4"
            },
            "returnParameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "5694:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5694:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5693:6:4"
            },
            "scope": 2174,
            "src": "5624:282:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2175,
        "src": "637:5271:4"
      }
    ],
    "src": "40:5869:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-22T04:14:17.054Z",
  "devdoc": {
    "details": "For the payment functionality, the \"withdraw pattern\" is being implemented for this contract. The ledger allocation is done is the method {allocatePrize} and the withdraw is implemented on {withdrawPrize}.",
    "events": {
      "PrizeAllocation(uint256,uint256,uint256,address,uint256)": {
        "details": "emitted when the prize allocation is performed. This may be used to alert winners that their prizes are available to withdraw."
      },
      "Withdraw(address,uint256,uint8,address,uint256)": {
        "details": "emitted when a prize is withdraw by a winner team."
      }
    },
    "kind": "dev",
    "methods": {
      "allocatePrize(uint256,uint256,uint256)": {
        "details": "It does not associate the prize with a specific account, since prizes cound be associated any moment by the organizers, as long as prizes were not allocated before. The contract needs to have enought balance to allocate funds to winners."
      },
      "approveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be approved"
        }
      },
      "closeEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "closeRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "closeSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "constructor": {
        "params": {
          "_description": "{bytes32} Hackathon's description. Optional.",
          "_id": "{uint256} Hackathon's unique indentifier",
          "_name": "{bytes32} Hackathon's name. Required."
        }
      },
      "getEvaluationStatus()": {
        "returns": {
          "_0": "{bool} returns {true} if enabled; otherwise, {false}."
        }
      },
      "getRegistrationStatus()": {
        "returns": {
          "_0": "{bool} returns {true} if enabled; otherwise, {false}."
        }
      },
      "getSubmissionStatus()": {
        "returns": {
          "_0": "{bool} returns {true} if enabled; otherwise, {false}."
        }
      },
      "getTeam(uint256)": {
        "params": {
          "teamId": "{uint256} the team's unique identifier returned on registration"
        },
        "returns": {
          "_0": "{bytes32} team's name",
          "_1": "{address} team's address",
          "_2": "{bytes32} team's proposal data",
          "_3": "{bool} team's status: {true} for approved; {false} for reproved;",
          "_4": "{uint256} team's grade"
        }
      },
      "getTeamByAddress(address)": {
        "params": {
          "teamAddress": "{address} the team's contract address used on registration"
        },
        "returns": {
          "_0": "{bytes32} team's name",
          "_1": "{address} team's address",
          "_2": "{bytes32} team's proposal data",
          "_3": "{bool} team's status: {true} for approved; {false} for reproved;",
          "_4": "{uint256} team's grade"
        }
      },
      "getWinnersIds()": {
        "returns": {
          "_0": "{uint256} First place's id",
          "_1": "{uint256} Second place's id",
          "_2": "{uint256} Third place's id"
        }
      },
      "openEvaluation()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "openRegistration()": {
        "details": "Overwritten to add modifier for access control."
      },
      "openSubmission()": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control."
      },
      "publishRank()": {
        "details": "emitts an WinnerAnnounced event for each winner (1st, 2nd, 3rd place)."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "details": "Registration process must be open.",
        "params": {
          "teamName": "{bytes32} team's proposal data; could be a hash for a file  on IPFS or for a github link; not required"
        }
      },
      "reproveTeam(uint256)": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamId": "{uint256} the ids of the teams to be reproved"
        }
      },
      "reproveTeams(uint256[])": {
        "details": "Should be overwritten on inherited contract to add modifier or require statements for access control.",
        "params": {
          "teamIds": "{uint256[]} an array containing the ids of the teams to be reproved"
        }
      },
      "submitEvaluation(uint256[],uint8[])": {
        "details": "The position of teamId and teamGrade must be the same in the array. For example, if teamId \"1\" is sent at {teamIds} array position \"5\" (zero-based), the grade for team \"1\" must be sent at position \"5\" in {teamGrades} array.",
        "params": {
          "teamGrades": "Array of the grades given by the judge for each team.",
          "teamIds": "Array of the ids associated with each team that is going to be evaluated."
        }
      },
      "updateProposalData(uint256,bytes32)": {
        "params": {
          "proposalData": "the updated data for the team's proposal",
          "teamId": "team's unique identifier; required"
        }
      },
      "withdrawPrize(address)": {
        "details": "Winners must implement IPayable to receive funds."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deposit(address,uint256,uint256)": {
        "notice": "Event emitted when the contract receives a deposit."
      }
    },
    "kind": "user",
    "methods": {
      "addJudge(address)": {
        "notice": "@dev Needs to be implemented by a inherited contract."
      },
      "allocatePrize(uint256,uint256,uint256)": {
        "notice": "Allows the organizer to allocate funds that's going to be distributed to winners."
      },
      "approveTeam(uint256)": {
        "notice": "(re)approves a team in participating in the contest"
      },
      "closeEvaluation()": {
        "notice": "Closes the evaluation process"
      },
      "closeRegistration()": {
        "notice": "Closes the registration process"
      },
      "closeSubmission()": {
        "notice": "Closes the proposal submission process"
      },
      "constructor": {
        "notice": "Creates a new Hackathon contract with a specific _id, _name, desciption, and a specific organizer."
      },
      "deposit()": {
        "notice": "Allows the contract to receive funds."
      },
      "getEvaluationStatus()": {
        "notice": "Gets the evaluation status"
      },
      "getRegistrationStatus()": {
        "notice": "Gets the registration status"
      },
      "getSubmissionStatus()": {
        "notice": "Gets the submission status"
      },
      "getTeam(uint256)": {
        "notice": "Returns the stored information of a team"
      },
      "getTeamByAddress(address)": {
        "notice": "Returns the stored information of a team, based on a provided address"
      },
      "getWinnersIds()": {
        "notice": "Gets the id of the winner teams."
      },
      "openEvaluation()": {
        "notice": "Opens the evaluation process"
      },
      "openRegistration()": {
        "notice": "Opens the registration process"
      },
      "openSubmission()": {
        "notice": "Opens the proposal submission process"
      },
      "publishRank()": {
        "notice": "Published the ranking results of the contest."
      },
      "registerTeam(bytes32,address,bytes32)": {
        "notice": "Registers a new team in the contest registry."
      },
      "reproveTeam(uint256)": {
        "notice": "reproves a team from participating in the contest"
      },
      "reproveTeams(uint256[])": {
        "notice": "reprove teams from participating in the contest"
      },
      "submitEvaluation(uint256[],uint8[])": {
        "notice": "Allows a judge to submit its evaluation for the teams competing in the contest. The evaluation for all teams must be submitted once."
      },
      "updateProposalData(uint256,bytes32)": {
        "notice": "Updates the proposal data for a specific team."
      },
      "withdrawPrize(address)": {
        "notice": "Allows withdrawing prizes to winners."
      }
    },
    "notice": "Represents a hackathon contest, where organizers can control the stages/phases of the contest (such as registration, submission, evaluation and results) as well as pay prizes to the winners.",
    "version": 1
  }
}
